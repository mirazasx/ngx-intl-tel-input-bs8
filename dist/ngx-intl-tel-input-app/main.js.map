{"version":3,"file":"main.js","mappings":";;;;;;;;;;;;;;;AACuD;;AAGhD,MAAM,WAAW;IADxB;QAEQ,iBAAY,GAAG;YACrB;gBACC,4BAA4B;gBAC5B,2EAAsB;gBACtB,IAAI;aACJ;YACD;gBACC,oBAAoB;gBACpB,uEAAkB;gBAClB,KAAK;aACL;YACD;gBACC,sBAAsB;gBACtB,uEAAkB;gBAClB,KAAK;aACL;YACD;gBACC,gBAAgB;gBAChB,IAAI;gBACJ,GAAG;gBACH,CAAC;gBACD;oBACC,KAAK;iBACL;aACD;YACD;gBACC,SAAS;gBACT,uEAAkB;gBAClB,KAAK;aACL;YACD;gBACC,QAAQ;gBACR,sEAAiB;gBACjB,KAAK;aACL;YACD;gBACC,UAAU;gBACV,IAAI;gBACJ,GAAG;gBACH,CAAC;gBACD;oBACC,KAAK;iBACL;aACD;YACD;gBACC,qBAAqB;gBACrB,IAAI;gBACJ,GAAG;gBACH,CAAC;gBACD;oBACC,KAAK;iBACL;aACD;YACD;gBACC,WAAW;gBACX,yEAAoB;gBACpB,IAAI;aACJ;YACD;gBACC,oBAAoB;gBACpB,uEAAkB;gBAClB,KAAK;aACL;YACD;gBACC,OAAO;gBACP,qEAAgB;gBAChB,KAAK;aACL;YACD;gBACC,WAAW;gBACX,yEAAoB;gBACpB,IAAI;gBACJ,CAAC;aACD;YACD;gBACC,sBAAsB;gBACtB,uEAAkB;gBAClB,IAAI;aACJ;YACD;gBACC,yBAAyB;gBACzB,0EAAqB;gBACrB,KAAK;aACL;YACD;gBACC,SAAS;gBACT,IAAI;gBACJ,GAAG;gBACH,CAAC;gBACD;oBACC,KAAK;iBACL;aACD;YACD;gBACC,sBAAsB;gBACtB,uEAAkB;gBAClB,KAAK;aACL;YACD;gBACC,uBAAuB;gBACvB,0EAAqB;gBACrB,KAAK;aACL;YACD;gBACC,UAAU;gBACV,IAAI;gBACJ,GAAG;gBACH,CAAC;gBACD;oBACC,KAAK;iBACL;aACD;YACD;gBACC,oBAAoB;gBACpB,uEAAkB;gBAClB,KAAK;aACL;YACD;gBACC,kBAAkB;gBAClB,uEAAkB;gBAClB,IAAI;aACJ;YACD;gBACC,QAAQ;g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nB,uEAAkB;gBAClB,IAAI;aACJ;YACD;gBACC,UAAU;gBACV,wEAAmB;gBACnB,KAAK;aACL;YACD;gBACC,UAAU;gBACV,wEAAmB;gBACnB,MAAM;aACN;YACD;gBACC,2CAA2C;gBAC3C,iFAA4B;gBAC5B,GAAG;gBACH,CAAC;gBACD,CAAC,KAAK,EAAE,KAAK,EAAE,KAAK,CAAC;aACrB;YACD;gBACC,SAAS;gBACT,uEAAkB;gBAClB,KAAK;aACL;YACD;gBACC,gBAAgB;gBAChB,qEAAgB;gBAChB,IAAI;aACJ;YACD;gBACC,aAAa;gBACb,0EAAqB;gBACrB,KAAK;aACL;YACD;gBACC,uCAAuC;gBACvC,gFAA2B;gBAC3B,KAAK;aACL;YACD;gBACC,SAAS;gBACT,uEAAkB;gBAClB,KAAK;aACL;YACD;gBACC,iBAAiB;gBACjB,uEAAkB;gBAClB,KAAK;aACL;YACD;gBACC,UAAU;gBACV,wEAAmB;gBACnB,KAAK;aACL;YACD;gBACC,mCAAmC;gBACnC,+EAA0B;gBAC1B,KAAK;aACL;YACD;gBACC,yBAAyB;gBACzB,4EAAuB;gBACvB,KAAK;aACL;YACD;gBACC,MAAM;gBACN,oEAAe;gBACf,KAAK;aACL;YACD;gBACC,iBAAiB;gBACjB,uEAAkB;gBAClB,KAAK;gBACL,CAAC;aACD;YACD;gBACC,QAAQ;gBACR,sEAAiB;gBACjB,IAAI;aACJ;YACD;gBACC,kCAAkC;gBAClC,4EAAuB;gBACvB,KAAK;aACL;YACD;gBACC,wCAAwC;gBACxC,+EAA0B;gBAC1B,KAAK;aACL;YACD;gBACC,OAAO;gBACP,qEAAgB;gBAChB,KAAK;aACL;YACD;gBACC,QAAQ;gBACR,sEAAiB;gBACjB,KAAK;aACL;YACD;gBACC,sBAAsB;gBACtB,uEAAkB;gBAClB,KAAK;aACL;YACD;gBACC,uBAAuB;gBACvB,uEAAkB;gBAClB,IAAI;aACJ;YACD;gBACC,eAAe;gBACf,qEAAgB;gBAChB,KAAK;aACL;YACD;gBACC,WAAW;gBACX,yEAAoB;gBACpB,KAAK;aACL;YACD;gBACC,iBAAiB;gBACjB,sEAAiB;gBACjB,IAAI;aACJ;YACD;gBACC,8BAA8B;gBAC9B,yEAAoB;gBACpB,KAAK;aACL;YACD;gBACC,SAAS;gBACT,uEAAkB;gBAClB,MAAM;aACN;YACD;gBACC,YAAY;gBACZ,0EAAqB;gBACrB,KAAK;gBACL,CAAC;aACD;YACD;gBACC,MAAM;gBACN,IAAI;gBACJ,GAAG;gBACH,CAAC;gBACD;oBACC,KAAK;iBACL;aACD;YACD;gBACC,WAAW;gBACX,yEAAoB;gBACpB,KAAK;aACL;YACD;gBACC,UAAU;gBACV,wEAAmB;gBACnB,IAAI;gBACJ,CAAC;gBACD,CAAC,IAAI,CAAC;aACN;YACD;gBACC,iBAAiB;gBACjB,sEAAiB;gBACjB,KAAK;aACL;YACD;gBACC,8BAA8B;gBAC9B,4EAAuB;gBACvB,KAAK;aACL;YACD;gBACC,QAAQ;gBACR,sEAAiB;gBACjB,KAAK;aACL;YACD;gBACC,OAAO;gBACP,qEAAgB;gBAChB,KAAK;aACL;YACD;gBACC,UAAU;gBACV,wEAAmB;gBACnB,KAAK;aACL;YACD;gBACC,gBAAgB;gBAChB,wEAAmB;gBACnB,KAAK;aACL;YACD;gBACC,wBAAwB;gBACxB,uEAAkB;gBAClB,IAAI;aACJ;YACD;gBACC,kBAAkB;gBAClB,uEAAkB;gBAClB,KAAK;aACL;YACD;gBACC,cAAc;gBACd,qEAAgB;gBAChB,IAAI;aACJ;YACD;gBACC,WAAW;gBACX,yEAAoB;gBACpB,IAAI;aACJ;YACD;gBACC,iBAAiB;gBACjB,oEAAe;gBACf,IAAI;aACJ;YACD;gBACC,kBAAkB;gBAClB,oEAAe;gBACf,KAAK;aACL;YACD;gBACC,SAAS;gBACT,uEAAkB;gBAClB,KAAK;aACL;YACD;gBACC,aAAa;gBACb,yEAAoB;gBACpB,IAAI;gBACJ,CAAC;gBACD,CAAC,IAAI,CAAC;aACN;YACD;gBACC,mBAAmB;gBACnB,sEAAiB;gBACjB,KAAK;aACL;YACD;gBACC,gBAAgB;gBAChB,qEAAgB;gBAChB,IAAI;gBACJ,CAAC;aACD;YACD;gBACC,SAAS;gBACT,IAAI;gBACJ,GAAG;gBACH,CAAC;gBACD;oBACC,KAAK;iBACL;aACD;YACD;gBACC,YAAY;gBACZ,qEAAgB;gBAChB,IAAI;aACJ;YACD;gBACC,QAAQ;gBACR,sEAAiB;gBACjB,IAAI;gBACJ,CAAC;gBACD,CAAC,IAAI,CAAC;aACN;YACD;gBACC,oBAAoB;gBACpB,sEAAiB;gBACjB,KAAK;aACL;YACD;gBACC,wBAAwB;gBACxB,0EAAqB;gBACrB,GAAG;gBACH,CAAC;aACD;YACD;gBACC,OAAO;gBACP,qEAAgB;gBAChB,KAAK;aACL;YACD;gBACC,UAAU;gBACV,wEAAmB;gBACnB,KAAK;aACL;YACD;gBACC,QAAQ;gBACR,sEAAiB;gBACjB,KAAK;aACL;YACD;gBACC,oBAAoB;gBACpB,sEAAiB;gBACjB,KAAK;aACL;YACD;gBACC,yBAAyB;gBACzB,0EAAqB;gBACrB,KAAK;aACL;YACD;gBACC,YAAY;gBACZ,oEAAe;gBACf,KAAK;aACL;YACD;gBACC,kBAAkB;gBAClB,sEAAiB;gBACjB,KAAK;aACL;YACD;gBACC,oBAAoB;gBACpB,uEAAkB;gBAClB,KAAK;aACL;YACD;gBACC,SAAS;gBACT,uEAAkB;gBAClB,KAAK;aACL;YACD;gBACC,SAAS;gBACT,uEAAkB;gBAClB,KAAK;aACL;YACD;gBACC,kBAAkB;gBAClB,qEAAgB;gBAChB,KAAK;aACL;YACD;gBACC,eAAe;gBACf,6EAAwB;gBACxB,KAAK;aACL;YACD;gBACC,qBAAqB;gBACrB,yEAAoB;gBACpB,KAAK;aACL;YACD;gBACC,YAAY;gBACZ,0EAAqB;gBACrB,KAAK;aACL;YACD;gBACC,YAAY;gBACZ,qEAAgB;gBAChB,KAAK;aACL;YACD;gBACC,gCAAgC;gBAChC,yEAAoB;gBACpB,KAAK;aACL;YACD;gBACC,2BAA2B;gBAC3B,0EAAqB;gBACrB,KAAK;aACL;YACD;gBACC,QAAQ;gBACR,sEAAiB;gBACjB,KAAK;aACL;YACD;gBACC,UAAU;gBACV,wEAAmB;gBACnB,IAAI;aACJ;YACD;gBACC,UAAU;gBACV,wEAAmB;gBACnB,KAAK;aACL;YACD;gBACC,MAAM;gBACN,oEAAe;gBACf,KAAK;aACL;YACD;gBACC,OAAO;gBACP,qEAAgB;gBAChB,KAAK;aACL;YACD;gBACC,kBAAkB;gBAClB,+EAA0B;gBAC1B,KAAK;aACL;YACD;gBACC,YAAY;gBACZ,0EAAqB;gBACrB,KAAK;aACL;YACD;gBACC,2BAA2B;gBAC3B,0EAAqB;gBACrB,KAAK;aACL;YACD;gBACC,mBAAmB;gBACnB,yEAAoB;gBACpB,KAAK;aACL;YACD;gBACC,SAAS;gBACT,uEAAkB;gBAClB,KAAK;gBACL,CAAC;aACD;YACD;gBACC,iBAAiB;gBACjB,sEAAiB;gBACjB,IAAI;aACJ;YACD;gBACC,YAAY;gBACZ,0EAAqB;gBACrB,KAAK;aACL;YACD;gBACC,6BAA6B;gBAC7B,uEAAkB;gBAClB,KAAK;aACL;YACD;gBACC,QAAQ;gBACR,sEAAiB;gBACjB,KAAK;aACL;YACD;gBACC,mBAAmB;gBACnB,wEAAmB;gBACnB,KAAK;aACL;YACD;gBACC,wBAAwB;gBACxB,0EAAqB;gBACrB,KAAK;aACL;YACD;gBACC,YAAY;gBACZ,IAAI;gBACJ,GAAG;gBACH,CAAC;gBACD;oBACC,KAAK;iBACL;aACD;YACD;gBACC,qBAAqB;gBACrB,uEAAkB;gBAClB,KAAK;gBACL,CAAC;aACD;YACD;gBACC,yBAAyB;gBACzB,0EAAqB;gBACrB,KAAK;aACL;YACD;gBACC,0BAA0B;gBAC1B,uEAAkB;gBAClB,IAAI;aACJ;YACD;gBACC,mBAAmB;gBACnB,uEAAkB;gBAClB,KAAK;aACL;YACD;gBACC,OAAO;gBACP,qEAAgB;gBAChB,KAAK;aACL;YACD;gBACC,eAAe;gBACf,qEAAgB;gBAChB,KAAK;aACL;YACD;gBACC,yBAAyB;gBACzB,2EAAsB;gBACtB,IAAI;aACJ;YACD;gBACC,oCAAoC;gBACpC,4EAAuB;gBACvB,KAAK;aACL;YACD;gBACC,aAAa;gBACb,0EAAqB;gBACrB,IAAI;aACJ;YACD;gBACC,WAAW;gBACX,yEAAoB;gBACpB,KAAK;aACL;YACD;gBACC,eAAe;gBACf,qEAAgB;gBAChB,KAAK;aACL;YACD;gBACC,SAAS;gBACT,uEAAkB;gBAClB,KAAK;aACL;YACD;gBACC,MAAM;gBACN,oEAAe;gBACf,KAAK;aACL;YACD;gBACC,gBAAgB;gBAChB,6EAAwB;gBACxB,KAAK;aACL;YACD;gBACC,8BAA8B;gBAC9B,0EAAqB;gBACrB,KAAK;aACL;YACD;gBACC,0BAA0B;gBAC1B,sFAAiC;gBACjC,MAAM;aACN;YACD;gBACC,gBAAgB;gBAChB,sEAAiB;gBACjB,IAAI;gBACJ,CAAC;aACD;YACD;gBACC,iBAAiB;gBACjB,oEAAe;gBACf,KAAK;aACL;YACD;gBACC,uBAAuB;gBACvB,wEAAmB;gBACnB,IAAI;aACJ;YACD;gBACC,OAAO;gBACP,qEAAgB;gBAChB,KAAK;aACL;YACD;gBACC,uBAAuB;gBACvB,yEAAoB;gBACpB,KAAK;aACL;YACD;gBACC,iBAAiB;gBACjB,sEAAiB;gBACjB,KAAK;aACL;YACD;gBACC,kBAAkB;gBAClB,8EAAyB;gBACzB,KAAK;aACL;YACD;gBACC,UAAU;gBACV,wEAAmB;gBACnB,KAAK;aACL;YACD;gBACC,aAAa;gBACb,oEAAe;gBACf,IAAI;aACJ;YACD;gBACC,aAAa;gBACb,2EAAsB;gBACtB,IAAI;aACJ;YACD;gBACC,iBAAiB;gBACjB,sEAAiB;gBACjB,IAAI;aACJ;YACD;gBACC,UAAU;gBACV,wEAAmB;gBACnB,KAAK;aACL;YACD;gBACC,aAAa;gBACb,0EAAqB;gBACrB,GAAG;gBACH,CAAC;gBACD,CAAC,KAAK,EAAE,KAAK,CAAC;aACd;YACD;gBACC,gBAAgB;gBAChB,qEAAgB;gBAChB,KAAK;aACL;YACD;gBACC,sBAAsB;gBACtB,0EAAkB;gBAClB,KAAK;gBACL,CAAC;aACD;YACD;gBACC,mBAAmB;gBACnB,uEAAkB;gBAClB,IAAI;aACJ;YACD;gBACC,iBAAiB;gBACjB,sEAAiB;gBACjB,GAAG;gBACH,CAAC;aACD;YACD;gBACC,QAAQ;gBACR,sEAAiB;gBACjB,KAAK;aACL;YACD;gBACC,qCAAqC;gBACrC,kFAA0B;gBAC1B,KAAK;gBACL,CAAC;aACD;YACD;gBACC,cAAc;gBACd,2EAAsB;gBACtB,KAAK;aACL;YACD;gBACC,uBAAuB;gBACvB,kFAA6B;gBAC7B,MAAM;aACN;YACD;gBACC,aAAa;gBACb,IAAI;gBACJ,GAAG;gBACH,CAAC;gBACD;oBACC,KAAK;iBACL;aACD;YACD;gBACC,gDAAgD;gBAChD,2EAAsB;gBACtB,KAAK;gBACL,CAAC;aACD;YACD;gBACC,sDAAsD;gBACtD,sFAAiC;gBACjC,KAAK;aACL;YACD;gBACC,kCAAkC;gBAClC,IAAI;gBACJ,GAAG;gBACH,CAAC;gBACD;oBACC,KAAK;iBACL;aACD;YACD;gBACC,OAAO;gBACP,qEAAgB;gBAChB,KAAK;aACL;YACD;gBACC,YAAY;gBACZ,yEAAoB;gBACpB,KAAK;aACL;YACD;gBACC,6CAA6C;gBAC7C,qFAA6B;gBAC7B,KAAK;aACL;YACD;gBACC,4CAA4C;gBAC5C,2EAAsB;gBACtB,KAAK;aACL;YACD;gBACC,mBAAmB;gBACnB,uEAAkB;gBAClB,KAAK;aACL;YACD;gBACC,iBAAiB;gBACjB,sEAAiB;gBACjB,KAAK;aACL;YACD;gBACC,YAAY;gBACZ,0EAAqB;gBACrB,KAAK;aACL;YACD;gBACC,cAAc;gBACd,2EAAsB;gBACtB,KAAK;aACL;YACD;gBACC,WAAW;gBACX,yEAAoB;gBACpB,IAAI;aACJ;YACD;gBACC,cAAc;gBACd,IAAI;gBACJ,GAAG;gBACH,CAAC;gBACD;oBACC,KAAK;iBACL;aACD;YACD;gBACC,sBAAsB;gBACtB,wEAAmB;gBACnB,KAAK;aACL;YACD;gBACC,sBAAsB;gBACtB,wEAAmB;gBACnB,KAAK;aACL;YACD;gBACC,iBAAiB;gBACjB,8EAAyB;gBACzB,KAAK;aACL;YACD;gBACC,sBAAsB;gBACtB,uEAAkB;gBAClB,KAAK;aACL;YACD;gBACC,cAAc;gBACd,2EAAsB;gBACtB,IAAI;aACJ;YACD;gBACC,oBAAoB;gBACpB,0EAAqB;gBACrB,IAAI;aACJ;YACD;gBACC,+BAA+B;gBAC/B,0EAAqB;gBACrB,KAAK;aACL;YACD;gBACC,gBAAgB;gBAChB,qEAAgB;gBAChB,IAAI;aACJ;YACD;gBACC,yBAAyB;gBACzB,wEAAmB;gBACnB,IAAI;aACJ;YACD;gBACC,oBAAoB;gBACpB,qEAAgB;gBAChB,KAAK;aACL;YACD;gBACC,UAAU;gBACV,wEAAmB;gBACnB,KAAK;aACL;YACD;gBACC,wBAAwB;gBACxB,mFAA8B;gBAC9B,IAAI;gBACJ,CAAC;aACD;YACD;gBACC,WAAW;gBACX,yEAAoB;gBACpB,KAAK;aACL;YACD;gBACC,kBAAkB;gBAClB,sEAAiB;gBACjB,IAAI;aACJ;YACD;gBACC,uBAAuB;gBACvB,2EAAsB;gBACtB,IAAI;aACJ;YACD;gBACC,kBAAkB;gBAClB,qEAAgB;gBAChB,KAAK;aACL;YACD;gBACC,aAAa;gBACb,sEAAiB;gBACjB,KAAK;aACL;YACD;gBACC,YAAY;gBACZ,0EAAqB;gBACrB,KAAK;aACL;YACD;gBACC,UAAU;gBACV,wEAAmB;gBACnB,KAAK;aACL;YACD;gBACC,gBAAgB;gBAChB,wEAAmB;gBACnB,IAAI;aACJ;YACD;gBACC,aAAa;gBACb,0EAAqB;gBACrB,KAAK;aACL;YACD;gBACC,MAAM;gBACN,oEAAe;gBACf,KAAK;aACL;YACD;gBACC,SAAS;gBACT,uEAAkB;gBAClB,KAAK;aACL;YACD;gBACC,OAAO;gBACP,qEAAgB;gBAChB,KAAK;aACL;YACD;gBACC,qBAAqB;gBACrB,IAAI;gBACJ,GAAG;gBACH,CAAC;gBACD;oBACC,KAAK;iBACL;aACD;YACD;gBACC,mBAAmB;gBACnB,uEAAkB;gBAClB,KAAK;aACL;YACD;gBACC,kBAAkB;gBAClB,sEAAiB;gBACjB,IAAI;aACJ;YACD;gBACC,cAAc;gBACd,4EAAuB;gBACvB,KAAK;aACL;YACD;gBACC,0BAA0B;gBAC1B,qFAAgC;gBAChC,MAAM;aACN;YAC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","sources":["./projects/ngx-intl-tel-input/src/lib/data/country-code.ts","./projects/ngx-intl-tel-input/src/lib/directives/native-element-injector.directive.ts","./projects/ngx-intl-tel-input/src/lib/enums/country-iso.enum.ts","./projects/ngx-intl-tel-input/src/lib/enums/phone-number-format.enum.ts","./projects/ngx-intl-tel-input/src/lib/enums/search-country-field.enum.ts","./projects/ngx-intl-tel-input/src/lib/interfaces/change-data.ts","./projects/ngx-intl-tel-input/src/lib/ngx-intl-tel-input.component.ts","./projects/ngx-intl-tel-input/src/lib/ngx-intl-tel-input.component.html","./projects/ngx-intl-tel-input/src/lib/ngx-intl-tel-input.module.ts","./projects/ngx-intl-tel-input/src/lib/ngx-intl-tel-input.validator.ts","./projects/ngx-intl-tel-input/src/public_api.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/environments/environment.ts","./src/main.ts"],"sourcesContent":["import { Injectable } from \"@angular/core\";\nimport { CountryISO } from '../enums/country-iso.enum';\n\n@Injectable()\nexport class CountryCode {\n\tpublic allCountries = [\n\t\t[\n\t\t\t'Afghanistan (‫افغانستان‬‎)',\n\t\t\tCountryISO.Afghanistan,\n\t\t\t'93'\n\t\t],\n\t\t[\n\t\t\t'Albania (Shqipëri)',\n\t\t\tCountryISO.Albania,\n\t\t\t'355'\n\t\t],\n\t\t[\n\t\t\t'Algeria (‫الجزائر‬‎)',\n\t\t\tCountryISO.Algeria,\n\t\t\t'213'\n\t\t],\n\t\t[\n\t\t\t'American Samoa',\n\t\t\t'as',\n\t\t\t'1',\n\t\t\t1,\n\t\t\t[\n\t\t\t\t'684',\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t'Andorra',\n\t\t\tCountryISO.Andorra,\n\t\t\t'376'\n\t\t],\n\t\t[\n\t\t\t'Angola',\n\t\t\tCountryISO.Angola,\n\t\t\t'244'\n\t\t],\n\t\t[\n\t\t\t'Anguilla',\n\t\t\t'ai',\n\t\t\t'1',\n\t\t\t1,\n\t\t\t[\n\t\t\t\t'264',\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t'Antigua and Barbuda',\n\t\t\t'ag',\n\t\t\t'1',\n\t\t\t1,\n\t\t\t[\n\t\t\t\t'268',\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t'Argentina',\n\t\t\tCountryISO.Argentina,\n\t\t\t'54'\n\t\t],\n\t\t[\n\t\t\t'Armenia (Հայաստան)',\n\t\t\tCountryISO.Armenia,\n\t\t\t'374'\n\t\t],\n\t\t[\n\t\t\t'Aruba',\n\t\t\tCountryISO.Aruba,\n\t\t\t'297'\n\t\t],\n\t\t[\n\t\t\t'Australia',\n\t\t\tCountryISO.Australia,\n\t\t\t'61',\n\t\t\t0\n\t\t],\n\t\t[\n\t\t\t'Austria (Österreich)',\n\t\t\tCountryISO.Austria,\n\t\t\t'43'\n\t\t],\n\t\t[\n\t\t\t'Azerbaijan (Azərbaycan)',\n\t\t\tCountryISO.Azerbaijan,\n\t\t\t'994'\n\t\t],\n\t\t[\n\t\t\t'Bahamas',\n\t\t\t'bs',\n\t\t\t'1',\n\t\t\t1,\n\t\t\t[\n\t\t\t\t'242',\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t'Bahrain (‫البحرين‬‎)',\n\t\t\tCountryISO.Bahrain,\n\t\t\t'973'\n\t\t],\n\t\t[\n\t\t\t'Bangladesh (বাংলাদেশ)',\n\t\t\tCountryISO.Bangladesh,\n\t\t\t'880'\n\t\t],\n\t\t[\n\t\t\t'Barbados',\n\t\t\t'bb',\n\t\t\t'1',\n\t\t\t1,\n\t\t\t[\n\t\t\t\t'246',\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t'Belarus (Беларусь)',\n\t\t\tCountryISO.Belarus,\n\t\t\t'375'\n\t\t],\n\t\t[\n\t\t\t'Belgium (België)',\n\t\t\tCountryISO.Belgium,\n\t\t\t'32'\n\t\t],\n\t\t[\n\t\t\t'Belize',\n\t\t\tCountryISO.Belize,\n\t\t\t'501'\n\t\t],\n\t\t[\n\t\t\t'Benin (Bénin)',\n\t\t\tCountryISO.Benin,\n\t\t\t'229'\n\t\t],\n\t\t[\n\t\t\t'Bermuda',\n\t\t\t'bm',\n\t\t\t'1',\n\t\t\t1,\n\t\t\t[\n\t\t\t\t'441',\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t'Bhutan (འབྲུག)',\n\t\t\tCountryISO.Bhutan,\n\t\t\t'975'\n\t\t],\n\t\t[\n\t\t\t'Bolivia',\n\t\t\tCountryISO.Bolivia,\n\t\t\t'591'\n\t\t],\n\t\t[\n\t\t\t'Bosnia and Herzegovina (Босна и Херцеговина)',\n\t\t\tCountryISO.BosniaAndHerzegovina,\n\t\t\t'387'\n\t\t],\n\t\t[\n\t\t\t'Botswana',\n\t\t\tCountryISO.Botswana,\n\t\t\t'267'\n\t\t],\n\t\t[\n\t\t\t'Brazil (Brasil)',\n\t\t\tCountryISO.Brazil,\n\t\t\t'55'\n\t\t],\n\t\t[\n\t\t\t'British Indian Ocean Territory',\n\t\t\tCountryISO.BritishIndianOceanTerritory,\n\t\t\t'246'\n\t\t],\n\t\t[\n\t\t\t'British Virgin Islands',\n\t\t\t'vg',\n\t\t\t'1',\n\t\t\t1,\n\t\t\t[\n\t\t\t\t'284',\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t'Brunei',\n\t\t\tCountryISO.Brunei,\n\t\t\t'673'\n\t\t],\n\t\t[\n\t\t\t'Bulgaria (България)',\n\t\t\tCountryISO.Bulgaria,\n\t\t\t'359'\n\t\t],\n\t\t[\n\t\t\t'Burkina Faso',\n\t\t\tCountryISO.BurkinaFaso,\n\t\t\t'226'\n\t\t],\n\t\t[\n\t\t\t'Burundi (Uburundi)',\n\t\t\tCountryISO.Burundi,\n\t\t\t'257'\n\t\t],\n\t\t[\n\t\t\t'Cambodia (កម្ពុជា)',\n\t\t\tCountryISO.Cambodia,\n\t\t\t'855'\n\t\t],\n\t\t[\n\t\t\t'Cameroon (Cameroun)',\n\t\t\tCountryISO.Cameroon,\n\t\t\t'237'\n\t\t],\n\t\t[\n\t\t\t'Canada',\n\t\t\tCountryISO.Canada,\n\t\t\t'1',\n\t\t\t1,\n\t\t\t[\n\t\t\t\t'204', '226', '236', '249', '250', '289', '306', '343', '365', '387', '403', '416',\n\t\t\t\t'418', '431', '437', '438', '450', '506', '514', '519', '548', '579', '581', '587',\n\t\t\t\t'604', '613', '639', '647', '672', '705', '709', '742', '778', '780', '782', '807',\n\t\t\t\t'819', '825', '867', '873', '902', '905'\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t'Cape Verde (Kabu Verdi)',\n\t\t\tCountryISO.CapeVerde,\n\t\t\t'238'\n\t\t],\n\t\t[\n\t\t\t'Caribbean Netherlands',\n\t\t\tCountryISO.CaribbeanNetherlands,\n\t\t\t'599',\n\t\t\t1\n\t\t],\n\t\t[\n\t\t\t'Cayman Islands',\n\t\t\t'ky',\n\t\t\t'1',\n\t\t\t1,\n\t\t\t[\n\t\t\t\t'345',\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t'Central African Republic (République centrafricaine)',\n\t\t\tCountryISO.CentralAfricanRepublic,\n\t\t\t'236'\n\t\t],\n\t\t[\n\t\t\t'Chad (Tchad)',\n\t\t\tCountryISO.Chad,\n\t\t\t'235'\n\t\t],\n\t\t[\n\t\t\t'Chile',\n\t\t\tCountryISO.Chile,\n\t\t\t'56'\n\t\t],\n\t\t[\n\t\t\t'China (中国)',\n\t\t\tCountryISO.China,\n\t\t\t'86'\n\t\t],\n\t\t[\n\t\t\t'Christmas Island',\n\t\t\tCountryISO.ChristmasIsland,\n\t\t\t'61',\n\t\t\t2\n\t\t],\n\t\t[\n\t\t\t'Cocos (Keeling) Islands',\n\t\t\tCountryISO.Cocos,\n\t\t\t'61',\n\t\t\t1\n\t\t],\n\t\t[\n\t\t\t'Colombia',\n\t\t\tCountryISO.Colombia,\n\t\t\t'57'\n\t\t],\n\t\t[\n\t\t\t'Comoros (‫جزر القمر‬‎)',\n\t\t\tCountryISO.Comoros,\n\t\t\t'269'\n\t\t],\n\t\t[\n\t\t\t'Congo (DRC) (Jamhuri ya Kidemokrasia ya Kongo)',\n\t\t\tCountryISO.CongoDRCJamhuriYaKidemokrasiaYaKongo,\n\t\t\t'243'\n\t\t],\n\t\t[\n\t\t\t'Congo (Republic) (Congo-Brazzaville)',\n\t\t\tCountryISO.CongoRepublicCongoBrazzaville,\n\t\t\t'242'\n\t\t],\n\t\t[\n\t\t\t'Cook Islands',\n\t\t\tCountryISO.CookIslands,\n\t\t\t'682'\n\t\t],\n\t\t[\n\t\t\t'Costa Rica',\n\t\t\tCountryISO.CostaRica,\n\t\t\t'506'\n\t\t],\n\t\t[\n\t\t\t'Côte d’Ivoire',\n\t\t\tCountryISO.CôteDIvoire,\n\t\t\t'225'\n\t\t],\n\t\t[\n\t\t\t'Croatia (Hrvatska)',\n\t\t\tCountryISO.Croatia,\n\t\t\t'385'\n\t\t],\n\t\t[\n\t\t\t'Cuba',\n\t\t\tCountryISO.Cuba,\n\t\t\t'53'\n\t\t],\n\t\t[\n\t\t\t'Curaçao',\n\t\t\tCountryISO.Curaçao,\n\t\t\t'599',\n\t\t\t0\n\t\t],\n\t\t[\n\t\t\t'Cyprus (Κύπρος)',\n\t\t\tCountryISO.Cyprus,\n\t\t\t'357'\n\t\t],\n\t\t[\n\t\t\t'Czech Republic (Česká republika)',\n\t\t\tCountryISO.CzechRepublic,\n\t\t\t'420'\n\t\t],\n\t\t[\n\t\t\t'Denmark (Danmark)',\n\t\t\tCountryISO.Denmark,\n\t\t\t'45'\n\t\t],\n\t\t[\n\t\t\t'Djibouti',\n\t\t\tCountryISO.Djibouti,\n\t\t\t'253'\n\t\t],\n\t\t[\n\t\t\t'Dominica',\n\t\t\tCountryISO.Dominica,\n\t\t\t'1767'\n\t\t],\n\t\t[\n\t\t\t'Dominican Republic (República Dominicana)',\n\t\t\tCountryISO.DominicanRepublic,\n\t\t\t'1',\n\t\t\t2,\n\t\t\t['809', '829', '849']\n\t\t],\n\t\t[\n\t\t\t'Ecuador',\n\t\t\tCountryISO.Ecuador,\n\t\t\t'593'\n\t\t],\n\t\t[\n\t\t\t'Egypt (‫مصر‬‎)',\n\t\t\tCountryISO.Egypt,\n\t\t\t'20'\n\t\t],\n\t\t[\n\t\t\t'El Salvador',\n\t\t\tCountryISO.ElSalvador,\n\t\t\t'503'\n\t\t],\n\t\t[\n\t\t\t'Equatorial Guinea (Guinea Ecuatorial)',\n\t\t\tCountryISO.EquatorialGuinea,\n\t\t\t'240'\n\t\t],\n\t\t[\n\t\t\t'Eritrea',\n\t\t\tCountryISO.Eritrea,\n\t\t\t'291'\n\t\t],\n\t\t[\n\t\t\t'Estonia (Eesti)',\n\t\t\tCountryISO.Estonia,\n\t\t\t'372'\n\t\t],\n\t\t[\n\t\t\t'Ethiopia',\n\t\t\tCountryISO.Ethiopia,\n\t\t\t'251'\n\t\t],\n\t\t[\n\t\t\t'Falkland Islands (Islas Malvinas)',\n\t\t\tCountryISO.FalklandIslands,\n\t\t\t'500'\n\t\t],\n\t\t[\n\t\t\t'Faroe Islands (Føroyar)',\n\t\t\tCountryISO.FaroeIslands,\n\t\t\t'298'\n\t\t],\n\t\t[\n\t\t\t'Fiji',\n\t\t\tCountryISO.Fiji,\n\t\t\t'679'\n\t\t],\n\t\t[\n\t\t\t'Finland (Suomi)',\n\t\t\tCountryISO.Finland,\n\t\t\t'358',\n\t\t\t0\n\t\t],\n\t\t[\n\t\t\t'France',\n\t\t\tCountryISO.France,\n\t\t\t'33'\n\t\t],\n\t\t[\n\t\t\t'French Guiana (Guyane française)',\n\t\t\tCountryISO.FrenchGuiana,\n\t\t\t'594'\n\t\t],\n\t\t[\n\t\t\t'French Polynesia (Polynésie française)',\n\t\t\tCountryISO.FrenchPolynesia,\n\t\t\t'689'\n\t\t],\n\t\t[\n\t\t\t'Gabon',\n\t\t\tCountryISO.Gabon,\n\t\t\t'241'\n\t\t],\n\t\t[\n\t\t\t'Gambia',\n\t\t\tCountryISO.Gambia,\n\t\t\t'220'\n\t\t],\n\t\t[\n\t\t\t'Georgia (საქართველო)',\n\t\t\tCountryISO.Georgia,\n\t\t\t'995'\n\t\t],\n\t\t[\n\t\t\t'Germany (Deutschland)',\n\t\t\tCountryISO.Germany,\n\t\t\t'49'\n\t\t],\n\t\t[\n\t\t\t'Ghana (Gaana)',\n\t\t\tCountryISO.Ghana,\n\t\t\t'233'\n\t\t],\n\t\t[\n\t\t\t'Gibraltar',\n\t\t\tCountryISO.Gibraltar,\n\t\t\t'350'\n\t\t],\n\t\t[\n\t\t\t'Greece (Ελλάδα)',\n\t\t\tCountryISO.Greece,\n\t\t\t'30'\n\t\t],\n\t\t[\n\t\t\t'Greenland (Kalaallit Nunaat)',\n\t\t\tCountryISO.Greenland,\n\t\t\t'299'\n\t\t],\n\t\t[\n\t\t\t'Grenada',\n\t\t\tCountryISO.Grenada,\n\t\t\t'1473'\n\t\t],\n\t\t[\n\t\t\t'Guadeloupe',\n\t\t\tCountryISO.Guadeloupe,\n\t\t\t'590',\n\t\t\t0\n\t\t],\n\t\t[\n\t\t\t'Guam',\n\t\t\t'gu',\n\t\t\t'1',\n\t\t\t1,\n\t\t\t[\n\t\t\t\t'671',\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t'Guatemala',\n\t\t\tCountryISO.Guatemala,\n\t\t\t'502'\n\t\t],\n\t\t[\n\t\t\t'Guernsey',\n\t\t\tCountryISO.Guernsey,\n\t\t\t'44',\n\t\t\t1,\n\t\t\t[1481]\n\t\t],\n\t\t[\n\t\t\t'Guinea (Guinée)',\n\t\t\tCountryISO.Guinea,\n\t\t\t'224'\n\t\t],\n\t\t[\n\t\t\t'Guinea-Bissau (Guiné Bissau)',\n\t\t\tCountryISO.GuineaBissau,\n\t\t\t'245'\n\t\t],\n\t\t[\n\t\t\t'Guyana',\n\t\t\tCountryISO.Guyana,\n\t\t\t'592'\n\t\t],\n\t\t[\n\t\t\t'Haiti',\n\t\t\tCountryISO.Haiti,\n\t\t\t'509'\n\t\t],\n\t\t[\n\t\t\t'Honduras',\n\t\t\tCountryISO.Honduras,\n\t\t\t'504'\n\t\t],\n\t\t[\n\t\t\t'Hong Kong (香港)',\n\t\t\tCountryISO.HongKong,\n\t\t\t'852'\n\t\t],\n\t\t[\n\t\t\t'Hungary (Magyarország)',\n\t\t\tCountryISO.Hungary,\n\t\t\t'36'\n\t\t],\n\t\t[\n\t\t\t'Iceland (Ísland)',\n\t\t\tCountryISO.Iceland,\n\t\t\t'354'\n\t\t],\n\t\t[\n\t\t\t'India (भारत)',\n\t\t\tCountryISO.India,\n\t\t\t'91'\n\t\t],\n\t\t[\n\t\t\t'Indonesia',\n\t\t\tCountryISO.Indonesia,\n\t\t\t'62'\n\t\t],\n\t\t[\n\t\t\t'Iran (‫ایران‬‎)',\n\t\t\tCountryISO.Iran,\n\t\t\t'98'\n\t\t],\n\t\t[\n\t\t\t'Iraq (‫العراق‬‎)',\n\t\t\tCountryISO.Iraq,\n\t\t\t'964'\n\t\t],\n\t\t[\n\t\t\t'Ireland',\n\t\t\tCountryISO.Ireland,\n\t\t\t'353'\n\t\t],\n\t\t[\n\t\t\t'Isle of Man',\n\t\t\tCountryISO.IsleOfMan,\n\t\t\t'44',\n\t\t\t2,\n\t\t\t[1624]\n\t\t],\n\t\t[\n\t\t\t'Israel (‫ישראל‬‎)',\n\t\t\tCountryISO.Israel,\n\t\t\t'972'\n\t\t],\n\t\t[\n\t\t\t'Italy (Italia)',\n\t\t\tCountryISO.Italy,\n\t\t\t'39',\n\t\t\t0\n\t\t],\n\t\t[\n\t\t\t'Jamaica',\n\t\t\t'jm',\n\t\t\t'1',\n\t\t\t1,\n\t\t\t[\n\t\t\t\t'876',\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t'Japan (日本)',\n\t\t\tCountryISO.Japan,\n\t\t\t'81'\n\t\t],\n\t\t[\n\t\t\t'Jersey',\n\t\t\tCountryISO.Jersey,\n\t\t\t'44',\n\t\t\t3,\n\t\t\t[1534]\n\t\t],\n\t\t[\n\t\t\t'Jordan (‫الأردن‬‎)',\n\t\t\tCountryISO.Jordan,\n\t\t\t'962'\n\t\t],\n\t\t[\n\t\t\t'Kazakhstan (Казахстан)',\n\t\t\tCountryISO.Kazakhstan,\n\t\t\t'7',\n\t\t\t1\n\t\t],\n\t\t[\n\t\t\t'Kenya',\n\t\t\tCountryISO.Kenya,\n\t\t\t'254'\n\t\t],\n\t\t[\n\t\t\t'Kiribati',\n\t\t\tCountryISO.Kiribati,\n\t\t\t'686'\n\t\t],\n\t\t[\n\t\t\t'Kosovo',\n\t\t\tCountryISO.Kosovo,\n\t\t\t'383'\n\t\t],\n\t\t[\n\t\t\t'Kuwait (‫الكويت‬‎)',\n\t\t\tCountryISO.Kuwait,\n\t\t\t'965'\n\t\t],\n\t\t[\n\t\t\t'Kyrgyzstan (Кыргызстан)',\n\t\t\tCountryISO.Kyrgyzstan,\n\t\t\t'996'\n\t\t],\n\t\t[\n\t\t\t'Laos (ລາວ)',\n\t\t\tCountryISO.Laos,\n\t\t\t'856'\n\t\t],\n\t\t[\n\t\t\t'Latvia (Latvija)',\n\t\t\tCountryISO.Latvia,\n\t\t\t'371'\n\t\t],\n\t\t[\n\t\t\t'Lebanon (‫لبنان‬‎)',\n\t\t\tCountryISO.Lebanon,\n\t\t\t'961'\n\t\t],\n\t\t[\n\t\t\t'Lesotho',\n\t\t\tCountryISO.Lesotho,\n\t\t\t'266'\n\t\t],\n\t\t[\n\t\t\t'Liberia',\n\t\t\tCountryISO.Liberia,\n\t\t\t'231'\n\t\t],\n\t\t[\n\t\t\t'Libya (‫ليبيا‬‎)',\n\t\t\tCountryISO.Libya,\n\t\t\t'218'\n\t\t],\n\t\t[\n\t\t\t'Liechtenstein',\n\t\t\tCountryISO.Liechtenstein,\n\t\t\t'423'\n\t\t],\n\t\t[\n\t\t\t'Lithuania (Lietuva)',\n\t\t\tCountryISO.Lithuania,\n\t\t\t'370'\n\t\t],\n\t\t[\n\t\t\t'Luxembourg',\n\t\t\tCountryISO.Luxembourg,\n\t\t\t'352'\n\t\t],\n\t\t[\n\t\t\t'Macau (澳門)',\n\t\t\tCountryISO.Macau,\n\t\t\t'853'\n\t\t],\n\t\t[\n\t\t\t'Macedonia (FYROM) (Македонија)',\n\t\t\tCountryISO.Macedonia,\n\t\t\t'389'\n\t\t],\n\t\t[\n\t\t\t'Madagascar (Madagasikara)',\n\t\t\tCountryISO.Madagascar,\n\t\t\t'261'\n\t\t],\n\t\t[\n\t\t\t'Malawi',\n\t\t\tCountryISO.Malawi,\n\t\t\t'265'\n\t\t],\n\t\t[\n\t\t\t'Malaysia',\n\t\t\tCountryISO.Malaysia,\n\t\t\t'60'\n\t\t],\n\t\t[\n\t\t\t'Maldives',\n\t\t\tCountryISO.Maldives,\n\t\t\t'960'\n\t\t],\n\t\t[\n\t\t\t'Mali',\n\t\t\tCountryISO.Mali,\n\t\t\t'223'\n\t\t],\n\t\t[\n\t\t\t'Malta',\n\t\t\tCountryISO.Malta,\n\t\t\t'356'\n\t\t],\n\t\t[\n\t\t\t'Marshall Islands',\n\t\t\tCountryISO.MarshallIslands,\n\t\t\t'692'\n\t\t],\n\t\t[\n\t\t\t'Martinique',\n\t\t\tCountryISO.Martinique,\n\t\t\t'596'\n\t\t],\n\t\t[\n\t\t\t'Mauritania (‫موريتانيا‬‎)',\n\t\t\tCountryISO.Mauritania,\n\t\t\t'222'\n\t\t],\n\t\t[\n\t\t\t'Mauritius (Moris)',\n\t\t\tCountryISO.Mauritius,\n\t\t\t'230'\n\t\t],\n\t\t[\n\t\t\t'Mayotte',\n\t\t\tCountryISO.Mayotte,\n\t\t\t'262',\n\t\t\t1\n\t\t],\n\t\t[\n\t\t\t'Mexico (México)',\n\t\t\tCountryISO.Mexico,\n\t\t\t'52'\n\t\t],\n\t\t[\n\t\t\t'Micronesia',\n\t\t\tCountryISO.Micronesia,\n\t\t\t'691'\n\t\t],\n\t\t[\n\t\t\t'Moldova (Republica Moldova)',\n\t\t\tCountryISO.Moldova,\n\t\t\t'373'\n\t\t],\n\t\t[\n\t\t\t'Monaco',\n\t\t\tCountryISO.Monaco,\n\t\t\t'377'\n\t\t],\n\t\t[\n\t\t\t'Mongolia (Монгол)',\n\t\t\tCountryISO.Mongolia,\n\t\t\t'976'\n\t\t],\n\t\t[\n\t\t\t'Montenegro (Crna Gora)',\n\t\t\tCountryISO.Montenegro,\n\t\t\t'382'\n\t\t],\n\t\t[\n\t\t\t'Montserrat',\n\t\t\t'ms',\n\t\t\t'1',\n\t\t\t1,\n\t\t\t[\n\t\t\t\t'664',\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t'Morocco (‫المغرب‬‎)',\n\t\t\tCountryISO.Morocco,\n\t\t\t'212',\n\t\t\t0\n\t\t],\n\t\t[\n\t\t\t'Mozambique (Moçambique)',\n\t\t\tCountryISO.Mozambique,\n\t\t\t'258'\n\t\t],\n\t\t[\n\t\t\t'Myanmar (Burma) (မြန်မာ)',\n\t\t\tCountryISO.Myanmar,\n\t\t\t'95'\n\t\t],\n\t\t[\n\t\t\t'Namibia (Namibië)',\n\t\t\tCountryISO.Namibia,\n\t\t\t'264'\n\t\t],\n\t\t[\n\t\t\t'Nauru',\n\t\t\tCountryISO.Nauru,\n\t\t\t'674'\n\t\t],\n\t\t[\n\t\t\t'Nepal (नेपाल)',\n\t\t\tCountryISO.Nepal,\n\t\t\t'977'\n\t\t],\n\t\t[\n\t\t\t'Netherlands (Nederland)',\n\t\t\tCountryISO.Netherlands,\n\t\t\t'31'\n\t\t],\n\t\t[\n\t\t\t'New Caledonia (Nouvelle-Calédonie)',\n\t\t\tCountryISO.NewCaledonia,\n\t\t\t'687'\n\t\t],\n\t\t[\n\t\t\t'New Zealand',\n\t\t\tCountryISO.NewZealand,\n\t\t\t'64'\n\t\t],\n\t\t[\n\t\t\t'Nicaragua',\n\t\t\tCountryISO.Nicaragua,\n\t\t\t'505'\n\t\t],\n\t\t[\n\t\t\t'Niger (Nijar)',\n\t\t\tCountryISO.Niger,\n\t\t\t'227'\n\t\t],\n\t\t[\n\t\t\t'Nigeria',\n\t\t\tCountryISO.Nigeria,\n\t\t\t'234'\n\t\t],\n\t\t[\n\t\t\t'Niue',\n\t\t\tCountryISO.Niue,\n\t\t\t'683'\n\t\t],\n\t\t[\n\t\t\t'Norfolk Island',\n\t\t\tCountryISO.NorfolkIsland,\n\t\t\t'672'\n\t\t],\n\t\t[\n\t\t\t'North Korea (조선 민주주의 인민 공화국)',\n\t\t\tCountryISO.NorthKorea,\n\t\t\t'850'\n\t\t],\n\t\t[\n\t\t\t'Northern Mariana Islands',\n\t\t\tCountryISO.NorthernMarianaIslands,\n\t\t\t'1670'\n\t\t],\n\t\t[\n\t\t\t'Norway (Norge)',\n\t\t\tCountryISO.Norway,\n\t\t\t'47',\n\t\t\t0\n\t\t],\n\t\t[\n\t\t\t'Oman (‫عُمان‬‎)',\n\t\t\tCountryISO.Oman,\n\t\t\t'968'\n\t\t],\n\t\t[\n\t\t\t'Pakistan (‫پاکستان‬‎)',\n\t\t\tCountryISO.Pakistan,\n\t\t\t'92'\n\t\t],\n\t\t[\n\t\t\t'Palau',\n\t\t\tCountryISO.Palau,\n\t\t\t'680'\n\t\t],\n\t\t[\n\t\t\t'Palestine (‫فلسطين‬‎)',\n\t\t\tCountryISO.Palestine,\n\t\t\t'970'\n\t\t],\n\t\t[\n\t\t\t'Panama (Panamá)',\n\t\t\tCountryISO.Panama,\n\t\t\t'507'\n\t\t],\n\t\t[\n\t\t\t'Papua New Guinea',\n\t\t\tCountryISO.PapuaNewGuinea,\n\t\t\t'675'\n\t\t],\n\t\t[\n\t\t\t'Paraguay',\n\t\t\tCountryISO.Paraguay,\n\t\t\t'595'\n\t\t],\n\t\t[\n\t\t\t'Peru (Perú)',\n\t\t\tCountryISO.Peru,\n\t\t\t'51'\n\t\t],\n\t\t[\n\t\t\t'Philippines',\n\t\t\tCountryISO.Philippines,\n\t\t\t'63'\n\t\t],\n\t\t[\n\t\t\t'Poland (Polska)',\n\t\t\tCountryISO.Poland,\n\t\t\t'48'\n\t\t],\n\t\t[\n\t\t\t'Portugal',\n\t\t\tCountryISO.Portugal,\n\t\t\t'351'\n\t\t],\n\t\t[\n\t\t\t'Puerto Rico',\n\t\t\tCountryISO.PuertoRico,\n\t\t\t'1',\n\t\t\t3,\n\t\t\t['787', '939']\n\t\t],\n\t\t[\n\t\t\t'Qatar (‫قطر‬‎)',\n\t\t\tCountryISO.Qatar,\n\t\t\t'974'\n\t\t],\n\t\t[\n\t\t\t'Réunion (La Réunion)',\n\t\t\tCountryISO.Réunion,\n\t\t\t'262',\n\t\t\t0\n\t\t],\n\t\t[\n\t\t\t'Romania (România)',\n\t\t\tCountryISO.Romania,\n\t\t\t'40'\n\t\t],\n\t\t[\n\t\t\t'Russia (Россия)',\n\t\t\tCountryISO.Russia,\n\t\t\t'7',\n\t\t\t0\n\t\t],\n\t\t[\n\t\t\t'Rwanda',\n\t\t\tCountryISO.Rwanda,\n\t\t\t'250'\n\t\t],\n\t\t[\n\t\t\t'Saint Barthélemy (Saint-Barthélemy)',\n\t\t\tCountryISO.SaintBarthélemy,\n\t\t\t'590',\n\t\t\t1\n\t\t],\n\t\t[\n\t\t\t'Saint Helena',\n\t\t\tCountryISO.SaintHelena,\n\t\t\t'290'\n\t\t],\n\t\t[\n\t\t\t'Saint Kitts and Nevis',\n\t\t\tCountryISO.SaintKittsAndNevis,\n\t\t\t'1869'\n\t\t],\n\t\t[\n\t\t\t'Saint Lucia',\n\t\t\t'lc',\n\t\t\t'1',\n\t\t\t1,\n\t\t\t[\n\t\t\t\t'758',\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t'Saint Martin (Saint-Martin (partie française))',\n\t\t\tCountryISO.SaintMartin,\n\t\t\t'590',\n\t\t\t2\n\t\t],\n\t\t[\n\t\t\t'Saint Pierre and Miquelon (Saint-Pierre-et-Miquelon)',\n\t\t\tCountryISO.SaintPierreAndMiquelon,\n\t\t\t'508'\n\t\t],\n\t\t[\n\t\t\t'Saint Vincent and the Grenadines',\n\t\t\t'vc',\n\t\t\t'1',\n\t\t\t1,\n\t\t\t[\n\t\t\t\t'784',\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t'Samoa',\n\t\t\tCountryISO.Samoa,\n\t\t\t'685'\n\t\t],\n\t\t[\n\t\t\t'San Marino',\n\t\t\tCountryISO.SanMarino,\n\t\t\t'378'\n\t\t],\n\t\t[\n\t\t\t'São Tomé and Príncipe (São Tomé e Príncipe)',\n\t\t\tCountryISO.SãoToméAndPríncipe,\n\t\t\t'239'\n\t\t],\n\t\t[\n\t\t\t'Saudi Arabia (‫المملكة العربية السعودية‬‎)',\n\t\t\tCountryISO.SaudiArabia,\n\t\t\t'966'\n\t\t],\n\t\t[\n\t\t\t'Senegal (Sénégal)',\n\t\t\tCountryISO.Senegal,\n\t\t\t'221'\n\t\t],\n\t\t[\n\t\t\t'Serbia (Србија)',\n\t\t\tCountryISO.Serbia,\n\t\t\t'381'\n\t\t],\n\t\t[\n\t\t\t'Seychelles',\n\t\t\tCountryISO.Seychelles,\n\t\t\t'248'\n\t\t],\n\t\t[\n\t\t\t'Sierra Leone',\n\t\t\tCountryISO.SierraLeone,\n\t\t\t'232'\n\t\t],\n\t\t[\n\t\t\t'Singapore',\n\t\t\tCountryISO.Singapore,\n\t\t\t'65'\n\t\t],\n\t\t[\n\t\t\t'Sint Maarten',\n\t\t\t'sx',\n\t\t\t'1',\n\t\t\t1,\n\t\t\t[\n\t\t\t\t'721',\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t'Slovakia (Slovensko)',\n\t\t\tCountryISO.Slovakia,\n\t\t\t'421'\n\t\t],\n\t\t[\n\t\t\t'Slovenia (Slovenija)',\n\t\t\tCountryISO.Slovenia,\n\t\t\t'386'\n\t\t],\n\t\t[\n\t\t\t'Solomon Islands',\n\t\t\tCountryISO.SolomonIslands,\n\t\t\t'677'\n\t\t],\n\t\t[\n\t\t\t'Somalia (Soomaaliya)',\n\t\t\tCountryISO.Somalia,\n\t\t\t'252'\n\t\t],\n\t\t[\n\t\t\t'South Africa',\n\t\t\tCountryISO.SouthAfrica,\n\t\t\t'27'\n\t\t],\n\t\t[\n\t\t\t'South Korea (대한민국)',\n\t\t\tCountryISO.SouthKorea,\n\t\t\t'82'\n\t\t],\n\t\t[\n\t\t\t'South Sudan (‫جنوب السودان‬‎)',\n\t\t\tCountryISO.SouthSudan,\n\t\t\t'211'\n\t\t],\n\t\t[\n\t\t\t'Spain (España)',\n\t\t\tCountryISO.Spain,\n\t\t\t'34'\n\t\t],\n\t\t[\n\t\t\t'Sri Lanka (ශ්‍රී ලංකාව)',\n\t\t\tCountryISO.SriLanka,\n\t\t\t'94'\n\t\t],\n\t\t[\n\t\t\t'Sudan (‫السودان‬‎)',\n\t\t\tCountryISO.Sudan,\n\t\t\t'249'\n\t\t],\n\t\t[\n\t\t\t'Suriname',\n\t\t\tCountryISO.Suriname,\n\t\t\t'597'\n\t\t],\n\t\t[\n\t\t\t'Svalbard and Jan Mayen',\n\t\t\tCountryISO.SvalbardAndJanMayen,\n\t\t\t'47',\n\t\t\t1\n\t\t],\n\t\t[\n\t\t\t'Swaziland',\n\t\t\tCountryISO.Swaziland,\n\t\t\t'268'\n\t\t],\n\t\t[\n\t\t\t'Sweden (Sverige)',\n\t\t\tCountryISO.Sweden,\n\t\t\t'46'\n\t\t],\n\t\t[\n\t\t\t'Switzerland (Schweiz)',\n\t\t\tCountryISO.Switzerland,\n\t\t\t'41'\n\t\t],\n\t\t[\n\t\t\t'Syria (‫سوريا‬‎)',\n\t\t\tCountryISO.Syria,\n\t\t\t'963'\n\t\t],\n\t\t[\n\t\t\t'Taiwan (台灣)',\n\t\t\tCountryISO.Taiwan,\n\t\t\t'886'\n\t\t],\n\t\t[\n\t\t\t'Tajikistan',\n\t\t\tCountryISO.Tajikistan,\n\t\t\t'992'\n\t\t],\n\t\t[\n\t\t\t'Tanzania',\n\t\t\tCountryISO.Tanzania,\n\t\t\t'255'\n\t\t],\n\t\t[\n\t\t\t'Thailand (ไทย)',\n\t\t\tCountryISO.Thailand,\n\t\t\t'66'\n\t\t],\n\t\t[\n\t\t\t'Timor-Leste',\n\t\t\tCountryISO.TimorLeste,\n\t\t\t'670'\n\t\t],\n\t\t[\n\t\t\t'Togo',\n\t\t\tCountryISO.Togo,\n\t\t\t'228'\n\t\t],\n\t\t[\n\t\t\t'Tokelau',\n\t\t\tCountryISO.Tokelau,\n\t\t\t'690'\n\t\t],\n\t\t[\n\t\t\t'Tonga',\n\t\t\tCountryISO.Tonga,\n\t\t\t'676'\n\t\t],\n\t\t[\n\t\t\t'Trinidad and Tobago',\n\t\t\t'tt',\n\t\t\t'1',\n\t\t\t1,\n\t\t\t[\n\t\t\t\t'868',\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t'Tunisia (‫تونس‬‎)',\n\t\t\tCountryISO.Tunisia,\n\t\t\t'216'\n\t\t],\n\t\t[\n\t\t\t'Turkey (Türkiye)',\n\t\t\tCountryISO.Turkey,\n\t\t\t'90'\n\t\t],\n\t\t[\n\t\t\t'Turkmenistan',\n\t\t\tCountryISO.Turkmenistan,\n\t\t\t'993'\n\t\t],\n\t\t[\n\t\t\t'Turks and Caicos Islands',\n\t\t\tCountryISO.TurksAndCaicosIslands,\n\t\t\t'1649'\n\t\t],\n\t\t[\n\t\t\t'Tuvalu',\n\t\t\tCountryISO.Tuvalu,\n\t\t\t'688'\n\t\t],\n\t\t[\n\t\t\t'U.S. Virgin Islands',\n\t\t\t'vi',\n\t\t\t'1',\n\t\t\t1,\n\t\t\t[\n\t\t\t\t'340',\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t'Uganda',\n\t\t\tCountryISO.Uganda,\n\t\t\t'256'\n\t\t],\n\t\t[\n\t\t\t'Ukraine (Україна)',\n\t\t\tCountryISO.Ukraine,\n\t\t\t'380'\n\t\t],\n\t\t[\n\t\t\t'United Arab Emirates (‫الإمارات العربية المتحدة‬‎)',\n\t\t\tCountryISO.UnitedArabEmirates,\n\t\t\t'971'\n\t\t],\n\t\t[\n\t\t\t'United Kingdom',\n\t\t\tCountryISO.UnitedKingdom,\n\t\t\t'44',\n\t\t\t0\n\t\t],\n\t\t[\n\t\t\t'United States',\n\t\t\tCountryISO.UnitedStates,\n\t\t\t'1',\n\t\t\t0\n\t\t],\n\t\t[\n\t\t\t'Uruguay',\n\t\t\tCountryISO.Uruguay,\n\t\t\t'598'\n\t\t],\n\t\t[\n\t\t\t'Uzbekistan (Oʻzbekiston)',\n\t\t\tCountryISO.Uzbekistan,\n\t\t\t'998'\n\t\t],\n\t\t[\n\t\t\t'Vanuatu',\n\t\t\tCountryISO.Vanuatu,\n\t\t\t'678'\n\t\t],\n\t\t[\n\t\t\t'Vatican City (Città del Vaticano)',\n\t\t\tCountryISO.VaticanCity,\n\t\t\t'39',\n\t\t\t1\n\t\t],\n\t\t[\n\t\t\t'Venezuela',\n\t\t\tCountryISO.Venezuela,\n\t\t\t'58'\n\t\t],\n\t\t[\n\t\t\t'Vietnam (Việt Nam)',\n\t\t\tCountryISO.Vietnam,\n\t\t\t'84'\n\t\t],\n\t\t[\n\t\t\t'Wallis and Futuna',\n\t\t\tCountryISO.WallisAndFutuna,\n\t\t\t'681'\n\t\t],\n\t\t[\n\t\t\t'Western Sahara (‫الصحراء الغربية‬‎)',\n\t\t\tCountryISO.WesternSahara,\n\t\t\t'212',\n\t\t\t1\n\t\t],\n\t\t[\n\t\t\t'Yemen (‫اليمن‬‎)',\n\t\t\tCountryISO.Yemen,\n\t\t\t'967'\n\t\t],\n\t\t[\n\t\t\t'Zambia',\n\t\t\tCountryISO.Zambia,\n\t\t\t'260'\n\t\t],\n\t\t[\n\t\t\t'Zimbabwe',\n\t\t\tCountryISO.Zimbabwe,\n\t\t\t'263'\n\t\t],\n\t\t[\n\t\t\t'Åland Islands',\n\t\t\tCountryISO.ÅlandIslands,\n\t\t\t'358',\n\t\t\t1\n\t\t]\n\t];\n}","import { Directive, ElementRef, OnInit } from '@angular/core';\nimport { NgControl } from '@angular/forms';\n\n/*\n\"Property 'nativeElement' does not exist on type 'FormControl'\".\n'NativeElementInjectorDirective' injects nativeElement to each control,\nso we can access it from inside validator for example.\nMore about this approach and reasons for this:\nhttps://github.com/angular/angular/issues/18025\nhttps://stackoverflow.com/a/54075119/1617590\n*/\n@Directive({\n\t// tslint:disable-next-line: directive-selector\n\tselector: '[ngModel], [formControl], [formControlName]',\n})\nexport class NativeElementInjectorDirective implements OnInit {\n\tconstructor(\n\t\tprivate controlDir: NgControl,\n\t\tprivate host: ElementRef<HTMLFormElement>\n\t) {}\n\tngOnInit() {\n\t\tif (this.controlDir.control) {\n\t\t\t// @ts-ignore\n      this.controlDir.control['nativeElement'] = this.host.nativeElement;\n\t\t}\n\t}\n}\n","export enum CountryISO {\n\tAfghanistan = 'af',\n\tAlbania = 'al',\n\tAlgeria = 'dz',\n\tAmericanSamoa = 'as',\n\tAndorra = 'ad',\n\tAngola = 'ao',\n\tAnguilla = 'ai',\n\tAntiguaAndBarbuda = 'ag',\n\tArgentina = 'ar',\n\tArmenia = 'am',\n\tAruba = 'aw',\n\tAustralia = 'au',\n\tAustria = 'at',\n\tAzerbaijan = 'az',\n\tBahamas = 'bs',\n\tBahrain = 'bh',\n\tBangladesh = 'bd',\n\tBarbados = 'bb',\n\tBelarus = 'by',\n\tBelgium = 'be',\n\tBelize = 'bz',\n\tBenin = 'bj',\n\tBermuda = 'bm',\n\tBhutan = 'bt',\n\tBolivia = 'bo',\n\tBosniaAndHerzegovina = 'ba',\n\tBotswana = 'bw',\n\tBrazil = 'br',\n\tBritishIndianOceanTerritory = 'io',\n\tBritishVirginIslands = 'vg',\n\tBrunei = 'bn',\n\tBulgaria = 'bg',\n\tBurkinaFaso = 'bf',\n\tBurundi = 'bi',\n\tCambodia = 'kh',\n\tCameroon = 'cm',\n\tCanada = 'ca',\n\tCapeVerde = 'cv',\n\tCaribbeanNetherlands = 'bq',\n\tCaymanIslands = 'ky',\n\tCentralAfricanRepublic = 'cf',\n\tChad = 'td',\n\tChile = 'cl',\n\tChina = 'cn',\n\tChristmasIsland = 'cx',\n\tCocos = 'cc',\n\tColombia = 'co',\n\tComoros = 'km',\n\tCongoDRCJamhuriYaKidemokrasiaYaKongo = 'cd',\n\tCongoRepublicCongoBrazzaville = 'cg',\n\tCookIslands = 'ck',\n\tCostaRica = 'cr',\n\tCôteDIvoire = 'ci',\n\tCroatia = 'hr',\n\tCuba = 'cu',\n\tCuraçao = 'cw',\n\tCyprus = 'cy',\n\tCzechRepublic = 'cz',\n\tDenmark = 'dk',\n\tDjibouti = 'dj',\n\tDominica = 'dm',\n\tDominicanRepublic = 'do',\n\tEcuador = 'ec',\n\tEgypt = 'eg',\n\tElSalvador = 'sv',\n\tEquatorialGuinea = 'gq',\n\tEritrea = 'er',\n\tEstonia = 'ee',\n\tEthiopia = 'et',\n\tFalklandIslands = 'fk',\n\tFaroeIslands = 'fo',\n\tFiji = 'fj',\n\tFinland = 'fi',\n\tFrance = 'fr',\n\tFrenchGuiana = 'gf',\n\tFrenchPolynesia = 'pf',\n\tGabon = 'ga',\n\tGambia = 'gm',\n\tGeorgia = 'ge',\n\tGermany = 'de',\n\tGhana = 'gh',\n\tGibraltar = 'gi',\n\tGreece = 'gr',\n\tGreenland = 'gl',\n\tGrenada = 'gd',\n\tGuadeloupe = 'gp',\n\tGuam = 'gu',\n\tGuatemala = 'gt',\n\tGuernsey = 'gg',\n\tGuinea = 'gn',\n\tGuineaBissau = 'gw',\n\tGuyana = 'gy',\n\tHaiti = 'ht',\n\tHonduras = 'hn',\n\tHongKong = 'hk',\n\tHungary = 'hu',\n\tIceland = 'is',\n\tIndia = 'in',\n\tIndonesia = 'id',\n\tIran = 'ir',\n\tIraq = 'iq',\n\tIreland = 'ie',\n\tIsleOfMan = 'im',\n\tIsrael = 'il',\n\tItaly = 'it',\n\tJamaica = 'jm',\n\tJapan = 'jp',\n\tJersey = 'je',\n\tJordan = 'jo',\n\tKazakhstan = 'kz',\n\tKenya = 'ke',\n\tKiribati = 'ki',\n\tKosovo = 'xk',\n\tKuwait = 'kw',\n\tKyrgyzstan = 'kg',\n\tLaos = 'la',\n\tLatvia = 'lv',\n\tLebanon = 'lb',\n\tLesotho = 'ls',\n\tLiberia = 'lr',\n\tLibya = 'ly',\n\tLiechtenstein = 'li',\n\tLithuania = 'lt',\n\tLuxembourg = 'lu',\n\tMacau = 'mo',\n\tMacedonia = 'mk',\n\tMadagascar = 'mg',\n\tMalawi = 'mw',\n\tMalaysia = 'my',\n\tMaldives = 'mv',\n\tMali = 'ml',\n\tMalta = 'mt',\n\tMarshallIslands = 'mh',\n\tMartinique = 'mq',\n\tMauritania = 'mr',\n\tMauritius = 'mu',\n\tMayotte = 'yt',\n\tMexico = 'mx',\n\tMicronesia = 'fm',\n\tMoldova = 'md',\n\tMonaco = 'mc',\n\tMongolia = 'mn',\n\tMontenegro = 'me',\n\tMontserrat = 'ms',\n\tMorocco = 'ma',\n\tMozambique = 'mz',\n\tMyanmar = 'mm',\n\tNamibia = 'na',\n\tNauru = 'nr',\n\tNepal = 'np',\n\tNetherlands = 'nl',\n\tNewCaledonia = 'nc',\n\tNewZealand = 'nz',\n\tNicaragua = 'ni',\n\tNiger = 'ne',\n\tNigeria = 'ng',\n\tNiue = 'nu',\n\tNorfolkIsland = 'nf',\n\tNorthKorea = 'kp',\n\tNorthernMarianaIslands = 'mp',\n\tNorway = 'no',\n\tOman = 'om',\n\tPakistan = 'pk',\n\tPalau = 'pw',\n\tPalestine = 'ps',\n\tPanama = 'pa',\n\tPapuaNewGuinea = 'pg',\n\tParaguay = 'py',\n\tPeru = 'pe',\n\tPhilippines = 'ph',\n\tPoland = 'pl',\n\tPortugal = 'pt',\n\tPuertoRico = 'pr',\n\tQatar = 'qa',\n\tRéunion = 're',\n\tRomania = 'ro',\n\tRussia = 'ru',\n\tRwanda = 'rw',\n\tSaintBarthélemy = 'bl',\n\tSaintHelena = 'sh',\n\tSaintKittsAndNevis = 'kn',\n\tSaintLucia = 'lc',\n\tSaintMartin = 'mf',\n\tSaintPierreAndMiquelon = 'pm',\n\tSaintVincentAndTheGrenadines = 'vc',\n\tSamoa = 'ws',\n\tSanMarino = 'sm',\n\tSãoToméAndPríncipe = 'st',\n\tSaudiArabia = 'sa',\n\tSenegal = 'sn',\n\tSerbia = 'rs',\n\tSeychelles = 'sc',\n\tSierraLeone = 'sl',\n\tSingapore = 'sg',\n\tSintMaarten = 'sx',\n\tSlovakia = 'sk',\n\tSlovenia = 'si',\n\tSolomonIslands = 'sb',\n\tSomalia = 'so',\n\tSouthAfrica = 'za',\n\tSouthKorea = 'kr',\n\tSouthSudan = 'ss',\n\tSpain = 'es',\n\tSriLanka = 'lk',\n\tSudan = 'sd',\n\tSuriname = 'sr',\n\tSvalbardAndJanMayen = 'sj',\n\tSwaziland = 'sz',\n\tSweden = 'se',\n\tSwitzerland = 'ch',\n\tSyria = 'sy',\n\tTaiwan = 'tw',\n\tTajikistan = 'tj',\n\tTanzania = 'tz',\n\tThailand = 'th',\n\tTimorLeste = 'tl',\n\tTogo = 'tg',\n\tTokelau = 'tk',\n\tTonga = 'to',\n\tTrinidadAndTobago = 'tt',\n\tTunisia = 'tn',\n\tTurkey = 'tr',\n\tTurkmenistan = 'tm',\n\tTurksAndCaicosIslands = 'tc',\n\tTuvalu = 'tv',\n\tUSVirginIslands = 'vi',\n\tUganda = 'ug',\n\tUkraine = 'ua',\n\tUnitedArabEmirates = 'ae',\n\tUnitedKingdom = 'gb',\n\tUnitedStates = 'us',\n\tUruguay = 'uy',\n\tUzbekistan = 'uz',\n\tVanuatu = 'vu',\n\tVaticanCity = 'va',\n\tVenezuela = 've',\n\tVietnam = 'vn',\n\tWallisAndFutuna = 'wf',\n\tWesternSahara = 'eh',\n\tYemen = 'ye',\n\tZambia = 'zm',\n\tZimbabwe = 'zw',\n\tÅlandIslands = 'ax',\n}\n","export enum PhoneNumberFormat {\n\tInternational = 'INTERNATIONAL',\n\tNational = 'NATIONAL',\n}\n","export enum SearchCountryField {\n\tDialCode = 'dialCode',\n\tIso2 = 'iso2',\n\tName = 'name',\n\tAll = 'all'\n}\n","export interface ChangeData {\n\tnumber?: string;\n\tinternationalNumber?: string;\n\tnationalNumber?: string;\n\te164Number?: string;\n\tcountryCode?: string;\n\tdialCode?: string;\n}\n","import * as lpn from 'google-libphonenumber';\n\nimport {\n\tComponent,\n\tElementRef,\n\tEventEmitter,\n\tforwardRef,\n\tInput,\n\tOnChanges,\n\tOnInit,\n\tOutput,\n\tSimpleChanges,\n\tViewChild,\n} from '@angular/core';\nimport { NG_VALIDATORS, NG_VALUE_ACCESSOR } from '@angular/forms';\n\nimport { setTheme } from 'ngx-bootstrap/utils';\n\nimport { CountryCode } from './data/country-code';\nimport { CountryISO } from './enums/country-iso.enum';\nimport { SearchCountryField } from './enums/search-country-field.enum';\nimport { ChangeData } from './interfaces/change-data';\nimport { Country } from './model/country.model';\nimport { phoneNumberValidator } from './ngx-intl-tel-input.validator';\nimport { PhoneNumberFormat } from './enums/phone-number-format.enum';\n\n@Component({\n\t// tslint:disable-next-line: component-selector\n\tselector: 'ngx-intl-tel-input',\n\ttemplateUrl: './ngx-intl-tel-input.component.html',\n\tstyleUrls: ['./bootstrap-dropdown.css', './ngx-intl-tel-input.component.css'],\n\tproviders: [\n\t\tCountryCode,\n\t\t{\n\t\t\tprovide: NG_VALUE_ACCESSOR,\n\t\t\t// tslint:disable-next-line:no-forward-ref\n\t\t\tuseExisting: forwardRef(() => NgxIntlTelInputComponent),\n\t\t\tmulti: true,\n\t\t},\n\t\t{\n\t\t\tprovide: NG_VALIDATORS,\n\t\t\tuseValue: phoneNumberValidator,\n\t\t\tmulti: true,\n\t\t},\n\t],\n})\nexport class NgxIntlTelInputComponent implements OnInit, OnChanges {\n\t@Input() value: string | undefined = '';\n\t@Input() preferredCountries: Array<string> = [];\n\t@Input() enablePlaceholder = true;\n\t@Input() customPlaceholder: string;\n\t@Input() numberFormat: PhoneNumberFormat = PhoneNumberFormat.International;\n\t@Input() cssClass = 'form-control';\n\t@Input() onlyCountries: Array<string> = [];\n\t@Input() enableAutoCountrySelect = true;\n\t@Input() searchCountryFlag = false;\n\t@Input() searchCountryField: SearchCountryField[] = [SearchCountryField.All];\n\t@Input() searchCountryPlaceholder = 'Search Country';\n\t@Input() maxLength: number;\n\t@Input() selectFirstCountry = true;\n\t@Input() selectedCountryISO: CountryISO;\n\t@Input() phoneValidation = true;\n\t@Input() inputId = 'phone';\n\t@Input() separateDialCode = false;\n\tseparateDialCodeClass: string;\n\n\t@Output() readonly countryChange = new EventEmitter<Country>();\n\n\tselectedCountry: Country = {\n\t\tareaCodes: undefined,\n\t\tdialCode: '',\n\t\thtmlId: '',\n\t\tflagClass: '',\n\t\tiso2: '',\n\t\tname: '',\n\t\tplaceHolder: '',\n\t\tpriority: 0,\n\t};\n\n\tphoneNumber: string | undefined = '';\n\tallCountries: Array<Country> = [];\n\tpreferredCountriesInDropDown: Array<Country> = [];\n\t// Has to be 'any' to prevent a need to install @types/google-libphonenumber by the package user...\n\tphoneUtil: any = lpn.PhoneNumberUtil.getInstance();\n\tdisabled = false;\n\terrors: Array<any> = ['Phone number is required.'];\n\tcountrySearchText = '';\n\n\t@ViewChild('countryList') countryList: ElementRef;\n\n\tonTouched = () => {};\n\tpropagateChange = (_: ChangeData) => {};\n\n\tconstructor(private countryCodeData: CountryCode) {\n\t\t// If this is not set, ngx-bootstrap will try to use the bs3 CSS (which is not what we've embedded) and will\n\t\t// Add the wrong classes and such\n\t\tsetTheme('bs4');\n\t}\n\n\tngOnInit() {\n\t\tthis.init();\n\t}\n\n\tngOnChanges(changes: SimpleChanges) {\n\t\tconst selectedISO = changes['selectedCountryISO'];\n\t\tif (\n\t\t\tthis.allCountries &&\n\t\t\tselectedISO &&\n\t\t\tselectedISO.currentValue !== selectedISO.previousValue\n\t\t) {\n\t\t\tthis.updateSelectedCountry();\n\t\t}\n\t\tif (changes['preferredCountries']) {\n\t\t\tthis.updatePreferredCountries();\n\t\t}\n\t\tthis.checkSeparateDialCodeStyle();\n\t}\n\n\t/*\n\t\tThis is a wrapper method to avoid calling this.ngOnInit() in writeValue().\n\t\tRef: http://codelyzer.com/rules/no-life-cycle-call/\n\t*/\n\tinit() {\n\t\tthis.fetchCountryData();\n\t\tif (this.preferredCountries.length) {\n\t\t\tthis.updatePreferredCountries();\n\t\t}\n\t\tif (this.onlyCountries.length) {\n\t\t\tthis.allCountries = this.allCountries.filter((c) =>\n\t\t\t\tthis.onlyCountries.includes(c.iso2)\n\t\t\t);\n\t\t}\n\t\tif (this.selectFirstCountry) {\n\t\t\tif (this.preferredCountriesInDropDown.length) {\n\t\t\t\tthis.setSelectedCountry(this.preferredCountriesInDropDown[0]);\n\t\t\t} else {\n\t\t\t\tthis.setSelectedCountry(this.allCountries[0]);\n\t\t\t}\n\t\t}\n\t\tthis.updateSelectedCountry();\n\t\tthis.checkSeparateDialCodeStyle();\n\t}\n\n\tsetSelectedCountry(country: Country) {\n\t\tthis.selectedCountry = country;\n\t\tthis.countryChange.emit(country);\n\t}\n\n\t/**\n\t * Search country based on country name, iso2, dialCode or all of them.\n\t */\n\tpublic searchCountry() {\n\t\tif (!this.countrySearchText) {\n\t\t\tthis.countryList.nativeElement\n\t\t\t\t.querySelector('.iti__country-list li')\n\t\t\t\t.scrollIntoView({\n\t\t\t\t\tbehavior: 'smooth',\n\t\t\t\t\tblock: 'nearest',\n\t\t\t\t\tinline: 'nearest',\n\t\t\t\t});\n\t\t\treturn;\n\t\t}\n\t\tconst countrySearchTextLower = this.countrySearchText.toLowerCase();\n    // @ts-ignore\n\t\tconst country = this.allCountries.filter((c) => {\n\t\t\tif (this.searchCountryField.indexOf(SearchCountryField.All) > -1) {\n\t\t\t\t// Search in all fields\n\t\t\t\tif (c.iso2.toLowerCase().startsWith(countrySearchTextLower)) {\n\t\t\t\t\treturn c;\n\t\t\t\t}\n\t\t\t\tif (c.name.toLowerCase().startsWith(countrySearchTextLower)) {\n\t\t\t\t\treturn c;\n\t\t\t\t}\n\t\t\t\tif (c.dialCode.startsWith(this.countrySearchText)) {\n\t\t\t\t\treturn c;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// Or search by specific SearchCountryField(s)\n\t\t\t\tif (this.searchCountryField.indexOf(SearchCountryField.Iso2) > -1) {\n\t\t\t\t\tif (c.iso2.toLowerCase().startsWith(countrySearchTextLower)) {\n\t\t\t\t\t\treturn c;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (this.searchCountryField.indexOf(SearchCountryField.Name) > -1) {\n\t\t\t\t\tif (c.name.toLowerCase().startsWith(countrySearchTextLower)) {\n\t\t\t\t\t\treturn c;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (this.searchCountryField.indexOf(SearchCountryField.DialCode) > -1) {\n\t\t\t\t\tif (c.dialCode.startsWith(this.countrySearchText)) {\n\t\t\t\t\t\treturn c;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\tif (country.length > 0) {\n\t\t\tconst el = this.countryList.nativeElement.querySelector(\n\t\t\t\t'#' + country[0].htmlId\n\t\t\t);\n\t\t\tif (el) {\n\t\t\t\tel.scrollIntoView({\n\t\t\t\t\tbehavior: 'smooth',\n\t\t\t\t\tblock: 'nearest',\n\t\t\t\t\tinline: 'nearest',\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\tthis.checkSeparateDialCodeStyle();\n\t}\n\n\tpublic onPhoneNumberChange(): void {\n\t\tlet countryCode: string | undefined;\n\t\t// Handle the case where the user sets the value programatically based on a persisted ChangeData obj.\n\t\tif (this.phoneNumber && typeof this.phoneNumber === 'object') {\n\t\t\tconst numberObj: ChangeData = this.phoneNumber;\n\t\t\tthis.phoneNumber = numberObj.number;\n\t\t\tcountryCode = numberObj.countryCode;\n\t\t}\n\n\t\tthis.value = this.phoneNumber;\n\t\tcountryCode = countryCode || this.selectedCountry.iso2;\n\t\t// @ts-ignore\n    const number = this.getParsedNumber(this.phoneNumber, countryCode);\n\n\t\t// auto select country based on the extension (and areaCode if needed) (e.g select Canada if number starts with +1 416)\n\t\tif (this.enableAutoCountrySelect) {\n      countryCode =\n\t\t\t\tnumber && number.getCountryCode()\n          // @ts-ignore\n\t\t\t\t\t? this.getCountryIsoCode(number.getCountryCode(), number)\n\t\t\t\t\t: this.selectedCountry.iso2;\n\t\t\tif (countryCode && countryCode !== this.selectedCountry.iso2) {\n\t\t\t\tconst newCountry = this.allCountries\n\t\t\t\t\t.sort((a, b) => {\n\t\t\t\t\t\treturn a.priority - b.priority;\n\t\t\t\t\t})\n\t\t\t\t\t.find((c) => c.iso2 === countryCode);\n\t\t\t\tif (newCountry) {\n\t\t\t\t\tthis.selectedCountry = newCountry;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tcountryCode = countryCode ? countryCode : this.selectedCountry.iso2;\n\n\t\tthis.checkSeparateDialCodeStyle();\n\n\t\tif (!this.value) {\n\t\t\t// Reason: avoid https://stackoverflow.com/a/54358133/1617590\n\t\t\t// tslint:disable-next-line: no-null-keyword\n\t\t\t// @ts-ignore\n      this.propagateChange(null);\n\t\t} else {\n\t\t\tconst intlNo = number\n\t\t\t\t? this.phoneUtil.format(number, lpn.PhoneNumberFormat.INTERNATIONAL)\n\t\t\t\t: '';\n\n\t\t\t// parse phoneNumber if separate dial code is needed\n\t\t\tif (this.separateDialCode && intlNo) {\n\t\t\t\tthis.value = this.removeDialCode(intlNo);\n\t\t\t}\n\n\t\t\tthis.propagateChange({\n\t\t\t\tnumber: this.value,\n\t\t\t\tinternationalNumber: intlNo,\n\t\t\t\tnationalNumber: number\n\t\t\t\t\t? this.phoneUtil.format(number, lpn.PhoneNumberFormat.NATIONAL)\n\t\t\t\t\t: '',\n\t\t\t\te164Number: number\n\t\t\t\t\t? this.phoneUtil.format(number, lpn.PhoneNumberFormat.E164)\n\t\t\t\t\t: '',\n\t\t\t\tcountryCode: countryCode.toUpperCase(),\n\t\t\t\tdialCode: '+' + this.selectedCountry.dialCode,\n\t\t\t});\n\t\t}\n\t}\n\n\tpublic onCountrySelect(country: Country, el: { focus: () => void; }): void {\n\t\tthis.setSelectedCountry(country);\n\n\t\tthis.checkSeparateDialCodeStyle();\n\n\t\tif (this.phoneNumber && this.phoneNumber.length > 0) {\n\t\t\tthis.value = this.phoneNumber;\n\t\t\tconst number = this.getParsedNumber(\n\t\t\t\tthis.phoneNumber,\n\t\t\t\tthis.selectedCountry.iso2\n\t\t\t);\n\t\t\tconst intlNo = number\n\t\t\t\t? this.phoneUtil.format(number, lpn.PhoneNumberFormat.INTERNATIONAL)\n\t\t\t\t: '';\n\t\t\t// parse phoneNumber if separate dial code is needed\n\t\t\tif (this.separateDialCode && intlNo) {\n\t\t\t\tthis.value = this.removeDialCode(intlNo);\n\t\t\t}\n\n\t\t\tthis.propagateChange({\n\t\t\t\tnumber: this.value,\n\t\t\t\tinternationalNumber: intlNo,\n\t\t\t\tnationalNumber: number\n\t\t\t\t\t? this.phoneUtil.format(number, lpn.PhoneNumberFormat.NATIONAL)\n\t\t\t\t\t: '',\n\t\t\t\te164Number: number\n\t\t\t\t\t? this.phoneUtil.format(number, lpn.PhoneNumberFormat.E164)\n\t\t\t\t\t: '',\n\t\t\t\tcountryCode: this.selectedCountry.iso2.toUpperCase(),\n\t\t\t\tdialCode: '+' + this.selectedCountry.dialCode,\n\t\t\t});\n\t\t} else {\n\t\t\t// Reason: avoid https://stackoverflow.com/a/54358133/1617590\n\t\t\t// tslint:disable-next-line: no-null-keyword\n\t\t\t// @ts-ignore\n      this.propagateChange(null);\n\t\t}\n\n\t\tel.focus();\n\t}\n\n\tpublic onInputKeyPress(event: KeyboardEvent): void {\n\t\tconst allowedChars = /[0-9\\+\\-\\(\\)\\ ]/;\n\t\tconst allowedCtrlChars = /[axcv]/; // Allows copy-pasting\n\t\tconst allowedOtherKeys = [\n\t\t\t'ArrowLeft',\n\t\t\t'ArrowUp',\n\t\t\t'ArrowRight',\n\t\t\t'ArrowDown',\n\t\t\t'Home',\n\t\t\t'End',\n\t\t\t'Insert',\n\t\t\t'Delete',\n\t\t\t'Backspace',\n\t\t];\n\n\t\tif (\n\t\t\t!allowedChars.test(event.key) &&\n\t\t\t!(event.ctrlKey && allowedCtrlChars.test(event.key)) &&\n\t\t\t!allowedOtherKeys.includes(event.key)\n\t\t) {\n\t\t\tevent.preventDefault();\n\t\t}\n\t}\n\n\tregisterOnChange(fn: any): void {\n\t\tthis.propagateChange = fn;\n\t}\n\n\tregisterOnTouched(fn: any) {\n\t\tthis.onTouched = fn;\n\t}\n\n\tsetDisabledState(isDisabled: boolean): void {\n\t\tthis.disabled = isDisabled;\n\t}\n\n\twriteValue(obj: any): void {\n\t\tif (obj === undefined) {\n\t\t\tthis.init();\n\t\t}\n\t\tthis.phoneNumber = obj;\n\t\tsetTimeout(() => {\n\t\t\tthis.onPhoneNumberChange();\n\t\t}, 1);\n\t}\n\n\tresolvePlaceholder(): string {\n\t\tlet placeholder = '';\n\t\tif (this.customPlaceholder) {\n\t\t\tplaceholder = this.customPlaceholder;\n\t\t} else if (this.selectedCountry.placeHolder) {\n\t\t\tplaceholder = this.selectedCountry.placeHolder;\n\t\t\tif (this.separateDialCode) {\n\t\t\t\tplaceholder = this.removeDialCode(placeholder);\n\t\t\t}\n\t\t}\n\t\treturn placeholder;\n\t}\n\n\t/* --------------------------------- Helpers -------------------------------- */\n\t/**\n\t * Returns parse PhoneNumber object.\n\t * @param phoneNumber string\n\t * @param countryCode string\n\t */\n\tprivate getParsedNumber(\n\t\tphoneNumber: string,\n\t\tcountryCode: string\n\t): lpn.PhoneNumber {\n\t\tlet number: lpn.PhoneNumber;\n\t\ttry {\n\t\t\tnumber = this.phoneUtil.parse(phoneNumber, countryCode.toUpperCase());\n\t\t} catch (e) {}\n\t\t// @ts-ignore\n    return number;\n\t}\n\n\t/**\n\t * Adjusts input alignment based on the dial code presentation style.\n\t */\n\tprivate checkSeparateDialCodeStyle() {\n\t\tif (this.separateDialCode && this.selectedCountry) {\n\t\t\tconst cntryCd = this.selectedCountry.dialCode;\n\t\t\tthis.separateDialCodeClass =\n\t\t\t\t'separate-dial-code iti-sdc-' + (cntryCd.length + 1);\n\t\t} else {\n\t\t\tthis.separateDialCodeClass = '';\n\t\t}\n\t}\n\n\t/**\n\t * Cleans dialcode from phone number string.\n\t * @param phoneNumber string\n\t */\n\tprivate removeDialCode(phoneNumber: string): string {\n\t\tconst number = this.getParsedNumber(phoneNumber, this.selectedCountry.iso2);\n\t\tphoneNumber = this.phoneUtil.format(\n\t\t\tnumber,\n\t\t\tlpn.PhoneNumberFormat[this.numberFormat]\n\t\t);\n\t\tif (phoneNumber.startsWith('+') && this.separateDialCode) {\n\t\t\tphoneNumber = phoneNumber.substr(phoneNumber.indexOf(' ') + 1);\n\t\t}\n\t\treturn phoneNumber;\n\t}\n\n\t/**\n\t * Sifts through all countries and returns iso code of the primary country\n\t * based on the number provided.\n\t * @param countryCode country code in number format\n\t * @param number PhoneNumber object\n\t */\n\tprivate getCountryIsoCode(\n\t\tcountryCode: number,\n\t\tnumber: lpn.PhoneNumber\n\t): string | undefined {\n\t\t// Will use this to match area code from the first numbers\n\t\t// @ts-ignore\n    const rawNumber = number['values_']['2'].toString();\n\t\t// List of all countries with countryCode (can be more than one. e.x. US, CA, DO, PR all have +1 countryCode)\n\t\tconst countries = this.allCountries.filter(\n\t\t\t(c) => c.dialCode === countryCode.toString()\n\t\t);\n\t\t// Main country is the country, which has no areaCodes specified in country-code.ts file.\n\t\tconst mainCountry = countries.find((c) => c.areaCodes === undefined);\n\t\t// Secondary countries are all countries, which have areaCodes specified in country-code.ts file.\n\t\tconst secondaryCountries = countries.filter(\n\t\t\t(c) => c.areaCodes !== undefined\n\t\t);\n\t\tlet matchedCountry = mainCountry ? mainCountry.iso2 : undefined;\n\n\t\t/*\n\t\t\tIterate over each secondary country and check if nationalNumber starts with any of areaCodes available.\n\t\t\tIf no matches found, fallback to the main country.\n\t\t*/\n\t\tsecondaryCountries.forEach((country) => {\n\t\t\t// @ts-ignore\n      country.areaCodes.forEach((areaCode) => {\n\t\t\t\tif (rawNumber.startsWith(areaCode)) {\n\t\t\t\t\tmatchedCountry = country.iso2;\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\n\t\treturn matchedCountry;\n\t}\n\n\t/**\n\t * Gets formatted example phone number from phoneUtil.\n\t * @param countryCode string\n\t */\n\tprotected getPhoneNumberPlaceHolder(countryCode: string): string {\n\t\ttry {\n\t\t\treturn this.phoneUtil.format(\n\t\t\t\tthis.phoneUtil.getExampleNumber(countryCode),\n\t\t\t\tlpn.PhoneNumberFormat[this.numberFormat]\n\t\t\t);\n\t\t} catch (e) {\n\t\t\t// @ts-ignore\n      return e;\n\t\t}\n\t}\n\n\t/**\n\t * Clearing the list to avoid duplicates (https://github.com/webcat12345/ngx-intl-tel-input/issues/248)\n\t */\n\tprotected fetchCountryData(): void {\n\t\tthis.allCountries = [];\n\n\t\tthis.countryCodeData.allCountries.forEach((c) => {\n\t\t\tconst country: Country = {\n\t\t\t\tname: c[0].toString(),\n\t\t\t\tiso2: c[1].toString(),\n\t\t\t\tdialCode: c[2].toString(),\n\t\t\t\tpriority: +c[3] || 0,\n\t\t\t\tareaCodes: (c[4] as string[]) || undefined,\n\t\t\t\thtmlId: `iti-0__item-${c[1].toString()}`,\n\t\t\t\tflagClass: `iti__${c[1].toString().toLocaleLowerCase()}`,\n\t\t\t\tplaceHolder: '',\n\t\t\t};\n\n\t\t\tif (this.enablePlaceholder) {\n\t\t\t\tcountry.placeHolder = this.getPhoneNumberPlaceHolder(\n\t\t\t\t\tcountry.iso2.toUpperCase()\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tthis.allCountries.push(country);\n\t\t});\n\t}\n\n\t/**\n\t * Populates preferredCountriesInDropDown with prefferred countries.\n\t */\n\tprivate updatePreferredCountries() {\n\t\tif (this.preferredCountries.length) {\n\t\t\tthis.preferredCountriesInDropDown = [];\n\t\t\tthis.preferredCountries.forEach((iso2) => {\n\t\t\t\tconst preferredCountry = this.allCountries.filter((c) => {\n\t\t\t\t\treturn c.iso2 === iso2;\n\t\t\t\t});\n\n\t\t\t\tthis.preferredCountriesInDropDown.push(preferredCountry[0]);\n\t\t\t});\n\t\t}\n\t}\n\n\t/**\n\t * Updates selectedCountry.\n\t */\n\tprivate updateSelectedCountry() {\n\t\tif (this.selectedCountryISO) {\n\t\t\t// @ts-ignore\n      this.selectedCountry = this.allCountries.find((c) => {\n\t\t\t\treturn c.iso2.toLowerCase() === this.selectedCountryISO.toLowerCase();\n\t\t\t});\n\t\t\tif (this.selectedCountry) {\n\t\t\t\tif (this.phoneNumber) {\n\t\t\t\t\tthis.onPhoneNumberChange();\n\t\t\t\t} else {\n\t\t\t\t\t// Reason: avoid https://stackoverflow.com/a/54358133/1617590\n\t\t\t\t\t// tslint:disable-next-line: no-null-keyword\n\t\t\t\t\t// @ts-ignore\n          this.propagateChange(null);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n","<div class=\"iti iti--allow-dropdown\"\n\t[ngClass]=\"separateDialCodeClass\">\n\t<div class=\"iti__flag-container\"\n\t\tdropdown\n\t\t[ngClass]=\"{'disabled': disabled}\"\n\t\t[isDisabled]=\"disabled\">\n\t\t<div class=\"iti__selected-flag dropdown-toggle\"\n\t\t\tdropdownToggle>\n\t\t\t<div class=\"iti__flag\"\n\t\t\t\t[ngClass]=\"selectedCountry.flagClass || ''\"></div>\n\t\t\t<div *ngIf=\"separateDialCode\"\n\t\t\t\tclass=\"selected-dial-code\">+{{selectedCountry.dialCode}}</div>\n\t\t\t<div class=\"iti__arrow\"></div>\n\t\t</div>\n\t\t<div *dropdownMenu\n\t\t\tclass=\"dropdown-menu country-dropdown\">\n\t\t\t<div class=\"search-container\"\n\t\t\t\t*ngIf=\"searchCountryFlag && searchCountryField\">\n\t\t\t\t<input id=\"country-search-box\"\n\t\t\t\t\t[(ngModel)]=\"countrySearchText\"\n\t\t\t\t\t(keyup)=\"searchCountry()\"\n\t\t\t\t\t(click)=\"$event.stopPropagation()\"\n\t\t\t\t\t[placeholder]=\"searchCountryPlaceholder\"\n\t\t\t\t\tautofocus>\n\t\t\t</div>\n\t\t\t<ul class=\"iti__country-list\"\n\t\t\t\t#countryList>\n\t\t\t\t<li class=\"iti__country iti__preferred\"\n\t\t\t\t\t*ngFor=\"let country of preferredCountriesInDropDown\"\n\t\t\t\t\t(click)=\"onCountrySelect(country, focusable)\"\n\t\t\t\t\t[id]=\"country.htmlId+'-preferred'\">\n\t\t\t\t\t<div class=\"iti__flag-box\">\n\t\t\t\t\t\t<div class=\"iti__flag\"\n\t\t\t\t\t\t\t[ngClass]=\"country.flagClass\"></div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<span class=\"iti__country-name\">{{country.name}}</span>\n\t\t\t\t\t<span class=\"iti__dial-code\">+{{country.dialCode}}</span>\n\t\t\t\t</li>\n\t\t\t\t<li class=\"iti__divider\"\n\t\t\t\t\t*ngIf=\"preferredCountriesInDropDown?.length\"></li>\n\t\t\t\t<li class=\"iti__country iti__standard\"\n\t\t\t\t\t*ngFor=\"let country of allCountries\"\n\t\t\t\t\t(click)=\"onCountrySelect(country, focusable)\"\n\t\t\t\t\t[id]=\"country.htmlId\">\n\t\t\t\t\t<div class=\"iti__flag-box\">\n\t\t\t\t\t\t<div class=\"iti__flag\"\n\t\t\t\t\t\t\t[ngClass]=\"country.flagClass\"></div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<span class=\"iti__country-name\">{{country.name}}</span>\n\t\t\t\t\t<span class=\"iti__dial-code\">+{{country.dialCode}}</span>\n\t\t\t\t</li>\n\t\t\t</ul>\n\t\t</div>\n\t</div>\n\t<input type=\"tel\"\n\t\t[id]=\"inputId\"\n\t\tautocomplete=\"off\"\n\t\t[ngClass]=\"cssClass\"\n\t\t(blur)=\"onTouched()\"\n\t\t(keypress)=\"onInputKeyPress($event)\"\n\t\t[(ngModel)]=\"phoneNumber\"\n\t\t(ngModelChange)=\"onPhoneNumberChange()\"\n\t\t[disabled]=\"disabled\"\n\t\t[placeholder]=\"resolvePlaceholder()\"\n\t\t[attr.maxLength]=\"maxLength\"\n\t\t[attr.validation]=\"phoneValidation\"\n\t\t#focusable>\n</div>\n","import { BsDropdownModule } from 'ngx-bootstrap/dropdown';\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule, ModuleWithProviders } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { NativeElementInjectorDirective } from './directives/native-element-injector.directive';\nimport { NgxIntlTelInputComponent } from './ngx-intl-tel-input.component';\n\nexport const dropdownModuleForRoot: ModuleWithProviders<BsDropdownModule> = BsDropdownModule.forRoot();\n\n@NgModule({\n\tdeclarations: [NgxIntlTelInputComponent, NativeElementInjectorDirective],\n\timports: [\n\t\tCommonModule,\n\t\tFormsModule,\n\t\tReactiveFormsModule,\n\t\tdropdownModuleForRoot,\n  ],\n\texports: [NgxIntlTelInputComponent, NativeElementInjectorDirective],\n})\nexport class NgxIntlTelInputModule {\n\n}\n","import * as lpn from 'google-libphonenumber';\n\n/*\nWe use \"control: any\" instead of \"control: FormControl\" to silence:\n\"Property 'nativeElement' does not exist on type 'FormControl'\".\nThis happens because I've expanded control with nativeElement via\n'NativeElementInjectorDirective' to get an access to the element.\nMore about this approach and reasons for this:\nhttps://github.com/angular/angular/issues/18025\nhttps://stackoverflow.com/a/54075119/1617590\n*/\nexport const phoneNumberValidator = (control: any) => {\n\tif (!control.value) {\n\t\treturn;\n\t}\n\t// Find <input> inside injected nativeElement and get its \"id\".\n\tconst el: HTMLElement = control.nativeElement as HTMLElement;\n\tconst inputBox: HTMLInputElement | any = el\n\t\t? el.querySelector('input[type=\"tel\"]')\n\t\t: undefined;\n\tif (inputBox) {\n\t\tconst id = inputBox.id;\n\t\tconst isCheckValidation = inputBox.getAttribute('validation');\n\t\tif (isCheckValidation === 'true') {\n\t\t\tconst isRequired = control.errors && control.errors.required === true;\n\t\t\tconst error = { validatePhoneNumber: { valid: false } };\n\n\t\t\tinputBox.setCustomValidity('Invalid field.');\n\n\t\t\tlet number: lpn.PhoneNumber;\n\n\t\t\ttry {\n\t\t\t\tnumber = lpn.PhoneNumberUtil.getInstance().parse(\n\t\t\t\t\tcontrol.value.number,\n\t\t\t\t\tcontrol.value.countryCode\n\t\t\t\t);\n\t\t\t} catch (e) {\n\t\t\t\tif (isRequired) {\n\t\t\t\t\treturn error;\n\t\t\t\t} else {\n\t\t\t\t\tinputBox.setCustomValidity('');\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (control.value) {\n\t\t\t\t// @ts-ignore\n        if (!number) {\n\t\t\t\t\treturn error;\n\t\t\t\t} else {\n\t\t\t\t\tif (\n\t\t\t\t\t\t!lpn.PhoneNumberUtil.getInstance().isValidNumberForRegion(\n\t\t\t\t\t\t\tnumber,\n\t\t\t\t\t\t\tcontrol.value.countryCode\n\t\t\t\t\t\t)\n\t\t\t\t\t) {\n\t\t\t\t\t\treturn error;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tinputBox.setCustomValidity('');\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (isCheckValidation === 'false') {\n\t\t\tinputBox.setCustomValidity('');\n\n\t\t\tcontrol.clearValidators();\n\t\t}\n\t}\n\treturn;\n};\n","/*\n * Public API Surface of ngx-intl-tel-input\n */\n\nexport * from './lib/ngx-intl-tel-input.component';\nexport * from './lib/directives/native-element-injector.directive';\nexport * from './lib/ngx-intl-tel-input.module';\nexport * from './lib/enums/country-iso.enum';\nexport * from './lib/enums/search-country-field.enum';\nexport * from './lib/enums/phone-number-format.enum';\nexport * from './lib/interfaces/change-data';\n","import { CountryISO } from 'projects/ngx-intl-tel-input/src/lib/enums/country-iso.enum';\nimport { SearchCountryField } from 'projects/ngx-intl-tel-input/src/lib/enums/search-country-field.enum';\n\nimport { Component } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { PhoneNumberFormat } from 'projects/ngx-intl-tel-input/src/public_api';\n\n@Component({\n\tselector: 'app-root',\n\ttemplateUrl: './app.component.html',\n\tstyleUrls: ['./app.component.css'],\n})\nexport class AppComponent {\n\tseparateDialCode = false;\n\tSearchCountryField = SearchCountryField;\n\tCountryISO = CountryISO;\n\tPhoneNumberFormat = PhoneNumberFormat;\n\tpreferredCountries: CountryISO[] = [\n\t\tCountryISO.UnitedStates,\n\t\tCountryISO.UnitedKingdom,\n\t];\n\tphoneForm = new FormGroup({\n\t\tphone: new FormControl(undefined, [Validators.required]),\n\t});\n\n\tchangePreferredCountries() {\n\t\tthis.preferredCountries = [CountryISO.India, CountryISO.Canada];\n\t}\n}\n","<!--The content below is only a placeholder and can be replaced.-->\n<div style=\"margin: 50px\">\n\t<h1>Test International Telephone Input Form</h1>\n\t<br>\n\t<div class=\"wrapper\">\n\t\t<button (click)=\"changePreferredCountries()\">Change Preferred Countries</button>\n\t</div>\n\t<div class=\"wrapper\">\n\t\t<input type=\"checkbox\"\n\t\t\t[(ngModel)]=\"separateDialCode\">\n\t\t<label>&nbsp;Separate Dial Code?</label>\n\t</div>\n\t<form #f=\"ngForm\"\n\t\t[formGroup]=\"phoneForm\">\n\t\t<div class=\"wrapper\">\n\t\t\t<ngx-intl-tel-input [cssClass]=\"'custom'\"\n\t\t\t\t[preferredCountries]=\"preferredCountries\"\n\t\t\t\t[enableAutoCountrySelect]=\"true\"\n\t\t\t\t[enablePlaceholder]=\"true\"\n\t\t\t\t[searchCountryFlag]=\"true\"\n\t\t\t\t[searchCountryField]=\"[SearchCountryField.Iso2, SearchCountryField.Name]\"\n\t\t\t\t[selectFirstCountry]=\"false\"\n\t\t\t\t[selectedCountryISO]=\"CountryISO.India\"\n\t\t\t\t[maxLength]=\"15\"\n\t\t\t\t[phoneValidation]=\"true\"\n\t\t\t\t[separateDialCode]=\"separateDialCode\"\n\t\t\t\t[numberFormat]=\"PhoneNumberFormat.National\"\n\t\t\t\tname=\"phone\"\n\t\t\t\tformControlName=\"phone\">\n\t\t\t</ngx-intl-tel-input>\n\t\t</div>\n\t\t<div class=\"wrapper\">\n\t\t\t<button (click)=\"f.reset()\">Reset</button>\n\t\t</div>\n\t</form>\n\t<br>\n\t<div><strong>Is input valid:</strong>\n\t\t<pre>{{ !f.form.controls['phone'].invalid }}</pre>\n\t</div>\n\t<div><strong>Is input touched:</strong>\n\t\t<pre>{{ f.form.controls['phone'].touched }}</pre>\n\t</div>\n\t<div><strong>Is form valid:</strong>\n\t\t<pre>{{ f.form.valid }}</pre>\n\t</div>\n\t<div><strong>Form value:</strong>\n\t\t<pre>{{ f.form.value | json }}</pre>\n\t</div>\n\t<div><strong>Form validation errors:</strong>\n\t\t<pre>{{ f.form.controls['phone'].errors | json }}</pre>\n\t</div>\n</div>\n","import {\n\tNgxIntlTelInputModule\n} from 'projects/ngx-intl-tel-input/src/lib/ngx-intl-tel-input.module';\n\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\nimport { AppComponent } from './app.component';\n\n@NgModule({\n\tdeclarations: [AppComponent],\n\timports: [\n\t\tBrowserModule,\n\t\tFormsModule,\n\t\tReactiveFormsModule,\n\t\tNgxIntlTelInputModule,\n\t\tBrowserAnimationsModule\n\t],\n\tproviders: [],\n\tbootstrap: [AppComponent],\n})\nexport class AppModule {}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/plugins/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"names":[],"sourceRoot":"webpack:///","x_google_ignoreList":[]}